{"version":3,"sources":["webpack:///src/app/components/country-list/country-list/country-list-routing.module.ts","webpack:///src/app/components/country-list/country-list/country-list.component.ts","webpack:///src/app/components/country-list/country-list/country-list.component.html","webpack:///src/app/components/country-list/country-list/country-list.module.ts","webpack:///src/app/components/country-list/country-name/country-name.component.ts","webpack:///src/app/components/country-list/country-name/country-name.component.html","webpack:///src/app/components/country-list/country/country.component.ts","webpack:///src/app/components/country-list/country/country.component.html","webpack:///src/app/components/country-list/region/region.component.ts","webpack:///src/app/components/country-list/region/region.component.html","webpack:///src/app/guards/country-list/can-leave-region.guard.ts","webpack:///src/app/guards/country-list/can-proceed-to-country.guard.ts","webpack:///src/app/guards/country-list/can-proceed-to-region.guard.ts","webpack:///src/app/pipes/country-list/format-area.pipe.ts","webpack:///src/app/pipes/country-list/format-forest-area.pipe.ts","webpack:///src/app/pipes/country-list/format-region-title.pipe.ts"],"names":["routes","path","component","canActivate","canDeactivate","children","CountryListRoutingModule","forChild","imports","exports","CountryListComponent","_router","menuMode","asiaMenuMode","europeMenuMode","africaMenuMode","oceaniaMenuMode","americaMenuMode","htmlElement","currentSubRegionContent","innerHTML","split","filter","name","Boolean","toLowerCase","regionHtmlElement","subRegionHtmlElement","regionName","takeNameOfContent","subRegionName","navigate","toggleMenuMode","returnMenuMode","toggleAsiaMenuMode","switchRouter","toggleEuropeMenuMode","toggleAfricaMenuMode","toggleOceaniaMenuMode","toggleAmericaMenuMode","selector","templateUrl","styleUrls","CountryListModule","declarations","providers","bootstrap","CountryNameComponent","_activatedRoute","_store$","_destroySubject$","isSearchLoading","onSelected","params","pipe","subscribe","_regionName","_subRegionName","select","next","complete","emit","country","countryName","replace","join","goToCurrentCountryRouter","CountryComponent","_facadeDonationListService","_facadeCountryListService","isCanChosenCountry","_selectedCountriesForDonation","chosenCountry","find","countryRouterName","countryRegionName","region","countrySubRegionName","subRegion","countryRegionRouterName","takeRouterNameOfRegionOrSubRegion","countrySubRegionRouterName","_appNavigationDonationButton","document","querySelector","classList","remove","searchCountry","selectedCountriesForDonation","countrySearchDelay","selectCountry","canChosenCountry","searchCountrySuccess","previousCountry","isPreviousCountry","nextCountry","isNextCountry","resetSearchCounrties","add","initNewCountryForDonation","deleteNewCountryForDonation","previousCountryName","switchRouterToSomeCountry","nextCountryName","RegionComponent","firstSubRegionCountryName","subRegionsCountries","firstSubRegionCountryRouterName","scrollBlock","scrollUpButton","addEventListener","isScrolling","searchSubRegionCountries","_isSearchCountry","countriesForDonation","_countriesForDonation","navigateToCurrentSubRegionRoute","selectedCountry","_selectedCountry","removeEventListener","scrollTo","top","behavior","deactivateQuestion","confirm","equals","scrollTop","windowScrollHeight","CanLeaveRegionGuard","CanProceedToCountryGuard","currentCountryRegionOrSubRegionRouteName","takeNameOfRegionOrSubRegion","_currentUrl","includes","isExistCurrentUrlCountry","_countryList","currentCountryRouterName","isExistRegionOrSubRegionRouteName","errorMessage","Error","state","url","currentCountryName","countryList","checkCountry","unsubscribe","CanProceedToRegionGuard","currentRegionSubRegionCountry","currentCountryRegionName","currentCountrySubRegionName","currentRegion","currentSubRegion","checkRouterParams","FormatAreaPipe","value","currentCountryArea","toString","currentCountryAreaInfoWithSpacesAfterEachThirdCharacters","countryAreaInfo","FormatForestAreaPipe","currentCountryForestArea","currentCountryForestAreaInfo","FormatRegionTitlePipe","map","currentWord","toUpperCase","slice"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,QAAMA,MAAM,GAAW,CACtB;AACCC,UAAI,EAAE,EADP;AAECC,eAAS,EAAE;AAFZ,KADsB,EAKtB;AACCD,UAAI,EAAE,mCADP;AAECC,eAAS,EAAE,wEAFZ;AAGCC,iBAAW,EAAE,CAAC,+GAAD,CAHd;AAICC,mBAAa,EAAE,CAAC,sGAAD,CAJhB;AAKCC,cAAQ,EAAE,CAAC;AACVJ,YAAI,EAAE,sBADI;AAEVC,iBAAS,EAAE,2EAFD;AAGVC,mBAAW,EAAE,CAAC,iHAAD;AAHH,OAAD;AALX,KALsB,CAAvB;;QAsBaG,wB;;;;;YAAAA;;;;yBAAAA,wB;AAAwB,O;AAAA,gBAH3B,CAAC,6DAAaC,QAAb,CAAsBP,MAAtB,CAAD,CAG2B,EAF1B,4DAE0B;;;;0HAAxBM,wB,EAAwB;AAAA;AAAA,kBAF1B,4DAE0B;AAAA,O;AAFd,K;;;;;sEAEVA,wB,EAAwB;cAJpC,sDAIoC;eAJ3B;AACTE,iBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBP,MAAtB,CAAD,CADA;AAETS,iBAAO,EAAE,CAAC,4DAAD;AAFA,S;AAI2B,Q;;;;;;;;;;;;;;;;;;AC/BrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,oB;AAUZ,oCACSC,OADT,EACwB;AAAA;;AAAf,aAAAA,OAAA,GAAAA,OAAA;AATF,aAAAC,QAAA,GAAoB,KAApB;AAEA,aAAAC,YAAA,GAAwB,KAAxB;AACA,aAAAC,cAAA,GAA0B,KAA1B;AACA,aAAAC,cAAA,GAA0B,KAA1B;AACA,aAAAC,eAAA,GAA2B,KAA3B;AACA,aAAAC,eAAA,GAA2B,KAA3B;AAMN;;;;0CAEyBC,W,EAAwB;AACjD,cAAMC,uBAAuB,GAAaD,WAAW,CAACE,SAAZ,CAAsBC,KAAtB,CAA4B,GAA5B,EAAiCC,MAAjC,CAAwC,UAACC,IAAD;AAAA,mBAAkBC,OAAO,CAACD,IAAD,CAAzB;AAAA,WAAxC,CAA1C;AACA,iBAAOJ,uBAAuB,CAAC,CAAD,CAAvB,CAA2BM,WAA3B,EAAP;AACA;;;yCAEoB;AACpB,eAAKb,QAAL,GAAgB,CAAC,KAAKA,QAAtB;AACA;;;yCAEoB;AACpB,eAAKA,QAAL,GAAgB,CAAC,KAAKA,QAAtB;AACA,eAAKC,YAAL,GAAoB,KAApB;AACA,eAAKC,cAAL,GAAsB,KAAtB;AACA,eAAKC,cAAL,GAAsB,KAAtB;AACA,eAAKC,eAAL,GAAuB,KAAvB;AACA,eAAKC,eAAL,GAAuB,KAAvB;AACA;;;6CAEwB;AACxB,eAAKJ,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACA;;;+CAE0B;AAC1B,eAAKC,cAAL,GAAsB,CAAC,KAAKA,cAA5B;AACA;;;gDAE2B;AAC3B,eAAKE,eAAL,GAAuB,CAAC,KAAKA,eAA7B;AACA;;;+CAE0B;AAC1B,eAAKD,cAAL,GAAsB,CAAC,KAAKA,cAA5B;AACA;;;gDAE2B;AAC3B,eAAKE,eAAL,GAAuB,CAAC,KAAKA,eAA7B;AACA;;;qCAEmBS,iB,EAAgCC,oB,EAAiC;AACpF,cAAMC,UAAU,GAAW,KAAKC,iBAAL,CAAuBH,iBAAvB,CAA3B;AACA,cAAMI,aAAa,GAAW,KAAKD,iBAAL,CAAuBF,oBAAvB,CAA9B;;AACA,eAAKhB,OAAL,CAAaoB,QAAb,CAAsB,CAAC,YAAD,EAAe,QAAf,EAAyBH,UAAzB,EAAqCE,aAArC,CAAtB;AACA;;;;;;;uBA1DWpB,oB,EAAoB,uH;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,e;AAAA,e;AAAA,8lC;AAAA;AAAA;;;ACRjC;;AACI;;AAGI;AAAA,mBAAS,IAAAsB,cAAA,EAAT;AAAyB,WAAzB;;AACA;;AAEI;;AACJ;;AACA;;AAGJ;;AACA;;AAEI;;AAGI;AAAA,mBAAS,IAAAC,cAAA,EAAT;AAAyB,WAAzB;;AAA2B;;AAC/B;;AAKI;AAAA,mBAAS,IAAAC,kBAAA,EAAT;AAA6B,WAA7B;;AAEA;;AACA;;AAII;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAC,YAAA,UAAT;AAAyC,WAAzC;;AAEA;;AACJ;;AACA;;AAII;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,YAAA,UAAT;AAAwC,WAAxC;;AAEA;;AACJ;;AACA;;AAII;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,YAAA,UAAT;AAAwC,WAAxC;;AAEA;;AACJ;;AACA;;AAII;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,YAAA,UAAT;AAAwC,WAAxC;;AAEA;;AACJ;;AACA;;AAII;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,YAAA,UAAT;AAA6C,WAA7C;;AAEA;;AACJ;;AACJ;;AACA;;AAKI;AAAA,mBAAS,IAAAC,oBAAA,EAAT;AAA+B,WAA/B;;AAEA;;AACA;;AAII;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAD,YAAA,UAAT;AAA6C,WAA7C;;AAEA;;AACJ;;AACA;;AAII;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,YAAA,UAAT;AAA6C,WAA7C;;AAEA;;AACJ;;AACA;;AAII;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,YAAA,UAAT;AAA4C,WAA5C;;AAEA;;AACJ;;AACA;;AAII;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,YAAA,WAAT;AAA4C,WAA5C;;AAEA;;AACJ;;AACJ;;AACA;;AAKI;AAAA,mBAAS,IAAAE,oBAAA,EAAT;AAA+B,WAA/B;;AAEA;;AACA;;AAII;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAF,YAAA,YAAT;AAA6C,WAA7C;;AAEA;;AACJ;;AACA;;AAII;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,YAAA,YAAT;AAA2C,WAA3C;;AAEA;;AACJ;;AACA;;AAII;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,YAAA,YAAT;AAA6C,WAA7C;;AAEA;;AACJ;;AACA;;AAII;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,YAAA,YAAT;AAA4C,WAA5C;;AAEA;;AACJ;;AACA;;AAII;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,YAAA,YAAT;AAA4C,WAA5C;;AAEA;;AACJ;;AACJ;;AACA;;AAKI;AAAA,mBAAS,IAAAG,qBAAA,EAAT;AAAgC,WAAhC;;AAEA;;AACA;;AAII;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAH,YAAA,YAAT;AAAyC,WAAzC;;AAEA;;AACJ;;AACA;;AAII;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,YAAA,YAAT;AAAyC,WAAzC;;AAEA;;AACJ;;AACA;;AAII;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,YAAA,YAAT;AAAyC,WAAzC;;AAEA;;AACJ;;AACA;;AAII;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,YAAA,YAAT;AAA0C,WAA1C;;AAEA;;AACJ;;AACJ;;AACA;;AAKI;AAAA,mBAAS,IAAAI,qBAAA,EAAT;AAAgC,WAAhC;;AAEA;;AACA;;AAII;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAJ,YAAA,YAAT;AAA8C,WAA9C;;AAEA;;AACJ;;AACA;;AAII;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,YAAA,YAAT;AAA+C,WAA/C;;AAEA;;AACJ;;AACA;;AAII;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,YAAA,YAAT;AAA4C,WAA5C;;AAEA;;AACJ;;AACA;;AAII;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,YAAA,YAAT;AAAyC,WAAzC;;AAEA;;AACJ;;AACJ;;AACJ;;AACJ;;;;AA9OQ;;AAAA;;AAWA;;AAAA;;AAGI;;AAAA;;AAIA;;AAAA,mMAAoH,gCAApH,EAAoH,YAApH,EAAoH,0CAApH,EAAoH,gBAApH;;AAQI;;AAAA,2HAAwD,iDAAxD,EAAwD,gBAAxD;;AAQA;;AAAA,2HAAwD,gDAAxD,EAAwD,gBAAxD;;AAQA;;AAAA,2HAAwD,gDAAxD,EAAwD,gBAAxD;;AAQA;;AAAA,2HAAwD,gDAAxD,EAAwD,gBAAxD;;AAQA;;AAAA,2HAAwD,sDAAxD,EAAwD,gBAAxD;;AASJ;;AAAA,iMAAkH,kCAAlH,EAAkH,YAAlH,EAAkH,4CAAlH,EAAkH,kBAAlH;;AAQI;;AAAA,6HAA0D,mDAA1D,EAA0D,kBAA1D;;AAQA;;AAAA,6HAA0D,mDAA1D,EAA0D,kBAA1D;;AAQA;;AAAA,6HAA0D,kDAA1D,EAA0D,kBAA1D;;AAQA;;AAAA,6HAA0D,kDAA1D,EAA0D,kBAA1D;;AASJ;;AAAA,iMAAkH,kCAAlH,EAAkH,YAAlH,EAAkH,4CAAlH,EAAkH,kBAAlH;;AAQI;;AAAA,6HAA0D,mDAA1D,EAA0D,kBAA1D;;AAQA;;AAAA,6HAA0D,iDAA1D,EAA0D,kBAA1D;;AAQA;;AAAA,6HAA0D,mDAA1D,EAA0D,kBAA1D;;AAQA;;AAAA,6HAA0D,kDAA1D,EAA0D,kBAA1D;;AAQA;;AAAA,6HAA0D,kDAA1D,EAA0D,kBAA1D;;AASJ;;AAAA,gMAAiH,mCAAjH,EAAiH,YAAjH,EAAiH,6CAAjH,EAAiH,mBAAjH;;AAQI;;AAAA,8HAA2D,qDAA3D,EAA2D,mBAA3D;;AAQA;;AAAA,8HAA2D,qDAA3D,EAA2D,mBAA3D;;AAQA;;AAAA,8HAA2D,qDAA3D,EAA2D,mBAA3D;;AAQA;;AAAA,8HAA2D,sDAA3D,EAA2D,mBAA3D;;AASJ;;AAAA,gMAAiH,mCAAjH,EAAiH,YAAjH,EAAiH,6CAAjH,EAAiH,mBAAjH;;AAQI;;AAAA,8HAA2D,mDAA3D,EAA2D,mBAA3D;;AAQA;;AAAA,8HAA2D,oDAA3D,EAA2D,mBAA3D;;AAQA;;AAAA,8HAA2D,iDAA3D,EAA2D,mBAA3D;;AAQA;;AAAA,8HAA2D,qDAA3D,EAA2D,mBAA3D;;;;;;;;sEDjOHzB,oB,EAAoB;cALhC,uDAKgC;eALtB;AACV8B,kBAAQ,EAAE,kBADA;AAEVC,qBAAW,EAAE,+BAFH;AAGVC,mBAAS,EAAE,CAAC,+BAAD,EAAkC,qCAAlC;AAHD,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;AERjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAmCaC,iB;;;;;YAAAA,iB;AAAiB,kBAFjB,4EAEiB;;;;yBAAjBA,iB;AAAiB,O;AAAA,iBAPlB,CACV,+GADU,EAEV,iHAFU,EAGV,uGAHU,C;AAIV,gBARQ,CACR,qFADQ,EAER,4DAFQ,CAQR;;;;0HAGWA,iB,EAAiB;AAAA,uBAnB5B,4EAmB4B,EAlB5B,2EAkB4B,EAjB5B,wEAiB4B,EAhB5B,yFAgB4B,EAf5B,uGAe4B,EAd5B,2FAc4B,EAb5B,0GAa4B;AAbP,kBAGrB,qFAHqB,EAIrB,4DAJqB;AAaO,O;AAThB,K;;;;;sEASDA,iB,EAAiB;cArB7B,sDAqB6B;eArBpB;AACTC,sBAAY,EAAE,CACb,4EADa,EAEb,2EAFa,EAGb,wEAHa,EAIb,yFAJa,EAKb,uGALa,EAMb,2FANa,EAOb,0GAPa,CADL;AAUTpC,iBAAO,EAAE,CACR,qFADQ,EAER,4DAFQ,CAVA;AAcTqC,mBAAS,EAAE,CACV,+GADU,EAEV,iHAFU,EAGV,uGAHU,CAdF;AAmBTC,mBAAS,EAAE,CAAC,4EAAD;AAnBF,S;AAqBoB,Q;;;;;;;;;;;;;;;;;;ACnC9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAaaC,oB;AAkBZ,oCACSpC,OADT,EAESqC,eAFT,EAGSC,OAHT,EAGuB;AAAA;;AAFd,aAAAtC,OAAA,GAAAA,OAAA;AACA,aAAAqC,eAAA,GAAAA,eAAA;AACA,aAAAC,OAAA,GAAAA,OAAA;AAnBD,aAAAC,gBAAA,GAAqC,IAAI,4CAAJ,EAArC;AAKD,aAAAC,eAAA,GAA2B,IAA3B;AASA,aAAAC,UAAA,GAAoC,IAAI,0DAAJ,EAApC;AAMF;;;;mCAEU;AAAA;;AACd,eAAKJ,eAAL,CAAqBK,MAArB,CACEC,IADF,CAEE,iEAAU,KAAKJ,gBAAf,CAFF,EAGGK,SAHH,CAGa,UAACF,MAAD,EAAoB;AAC/B,iBAAI,CAACG,WAAL,GAAmBH,MAAM,CAACzB,UAA1B;AACA,iBAAI,CAAC6B,cAAL,GAAsBJ,MAAM,CAACvB,aAA7B;AACA,WANF;;AAQA,eAAKmB,OAAL,CAAaS,MAAb,CAAoB,8GAApB,EACEJ,IADF,CAEE,6DAAM,CAAN,CAFF,EAGE,iEAAU,KAAKJ,gBAAf,CAHF,EAIGK,SAJH,CAIa,UAACJ,eAAD,EAA8B;AACzC,iBAAI,CAACA,eAAL,GAAuBA,eAAvB;AACA,WANF;AAOA;;;sCAEiB;AACjB,eAAKD,gBAAL,CAAsBS,IAAtB,CAA2B,IAA3B;;AACA,eAAKT,gBAAL,CAAsBU,QAAtB;AACA;;;mDAE8B;AAC9B,eAAKR,UAAL,CAAgBS,IAAhB,CAAqB,KAAKC,OAA1B;AACA,cAAMC,WAAW,GAAW,KAAKD,OAAL,CAAavC,IAAb,CAAkByC,OAAlB,CAA0B,KAA1B,EAAiC,EAAjC,EAC1BA,OAD0B,CAClB,QADkB,EACR,EADQ,EAE1BvC,WAF0B,GAG1BJ,KAH0B,CAGpB,GAHoB,EAI1B4C,IAJ0B,CAIrB,GAJqB,CAA5B;;AAKA,eAAKtD,OAAL,CAAaoB,QAAb,CAAsB,CACrB,YADqB,EAErB,QAFqB,EAGrB,KAAKyB,WAHgB,EAIrB,KAAKC,cAJgB,EAKrB,SALqB,EAMrBM,WANqB,CAAtB;AAQA;;;;;;;uBA9DWhB,oB,EAAoB,uH,EAAA,+H,EAAA,kH;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,sF;AAAA;AAAA;ACZjC;;AACI;;AAII;AAAA,mBAAS,IAAAmB,wBAAA,EAAT;AAAmC,WAAnC;;AACA;;AACJ;;AACJ;;;;AALQ;;AAAA;;AACA;;AAEA;;AAAA;;;;;;;;sEDMKnB,oB,EAAoB;cALhC,uDAKgC;eALtB;AACVP,kBAAQ,EAAE,kBADA;AAEVC,qBAAW,EAAE,+BAFH;AAGVC,mBAAS,EAAE,CAAC,+BAAD,EAAkC,qCAAlC;AAHD,S;AAKsB,Q;;;;;;;;;;gBAS/B;;;gBAGA;;;gBAGA;;;;;;;;;;;;;;;;;;;;AE5BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAA;;AAGI;;AACI;;AAEI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AAGJ;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAGI;AAAA;;AAAA;;AAAA;AAAA;;AACJ;;AACA;;AAGI;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AACJ;;AACA;;AAGI;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AACJ;;AACA;;AAGI;AAAA;;AAAA;;AAAA;AAAA;;AACJ;;AACJ;;AACJ;;;;;;AA/FwB;;AAAA;;AAIA;;AAAA;;AAOA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AASJ;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAQR;;AAAA;;AAKA;;AAAA;;AAMA;;AAAA;;AAMA;;AAAA;;;;;;AAMZ;;AAGI;;AACI;;AAEJ;;AACA;;AACI;;AAEJ;;AACA;;AACI;;AAEJ;;AACA;;AACI;;AAEJ;;AACA;;AACI;;AAEJ;;AACA;;AACI;;AAEJ;;AACA;;AACI;;AAEJ;;AACJ;;;;QDpHayB,gB;AAmBZ,gCACSlB,OADT,EAESD,eAFT,EAGSrC,OAHT,EAISyD,0BAJT,EAKSC,yBALT,EAK4D;AAAA;;AAJnD,aAAApB,OAAA,GAAAA,OAAA;AACA,aAAAD,eAAA,GAAAA,eAAA;AACA,aAAArC,OAAA,GAAAA,OAAA;AACA,aAAAyD,0BAAA,GAAAA,0BAAA;AACA,aAAAC,yBAAA,GAAAA,yBAAA;AAtBD,aAAAnB,gBAAA,GAAqC,IAAI,4CAAJ,EAArC;AAMD,aAAAC,eAAA,GAA2B,IAA3B;AASA,aAAAmB,kBAAA,GAA8B,IAA9B;AAQF;;;;yCAEoBP,W,EAAmB;AAC3C,cAAIvC,OAAO,CAAC,KAAK+C,6BAAN,CAAX,EAAiD;AAChD,gBAAMC,aAAa,GAAY,KAAKD,6BAAL,CAAmCE,IAAnC,CAAwC,UAACX,OAAD;AAAA,qBAAsBA,OAAO,CAACvC,IAAR,KAAiBwC,WAAvC;AAAA,aAAxC,CAA/B;;AACA,mBAAO,CAACvC,OAAO,CAACgD,aAAD,CAAf;AACA,WAHD,MAGO;AACN,mBAAO,IAAP;AACA;AACD;;;kDAEiCT,W,EAAmB;AACpD,cAAMW,iBAAiB,GAAWX,WAAW,CAACC,OAAZ,CAAoB,KAApB,EAA2B,EAA3B,EAChCA,OADgC,CACxB,QADwB,EACd,EADc,EAEhCvC,WAFgC,GAGhCJ,KAHgC,CAG1B,GAH0B,EAIhC4C,IAJgC,CAI3B,GAJ2B,CAAlC;AAMA,cAAMU,iBAAiB,GAAW,KAAKb,OAAL,CAAac,MAA/C;AACA,cAAMC,oBAAoB,GAAW,KAAKf,OAAL,CAAagB,SAAlD;AACA,cAAMC,uBAAuB,GAAW,KAAKC,iCAAL,CAAuCL,iBAAvC,CAAxC;AACA,cAAMM,0BAA0B,GAAW,KAAKD,iCAAL,CAAuCH,oBAAvC,CAA3C;;AAEA,eAAKlE,OAAL,CAAaoB,QAAb,CAAsB,CACrB,YADqB,EAErB,QAFqB,EAGrBgD,uBAHqB,EAIrBE,0BAJqB,EAKrB,SALqB,EAMrBP,iBANqB,CAAtB;AAQA;;;0DAEyCnD,I,EAAY;AACrD,iBAAOA,IAAI,CAACE,WAAL,GAAmBJ,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAAP;AACA;;;mCAEc;AAAA;;AACd,eAAK6D,4BAAL,GAAoCC,QAAQ,CAACC,aAAT,CAAuB,mCAAvB,CAApC;;AAEA,eAAKpC,eAAL,CAAqBK,MAArB,CACEC,IADF,CAEE,iEAAU,KAAKJ,gBAAf,CAFF,EAGGK,SAHH,CAGa,UAACF,MAAD,EAAoB;AAC/B,kBAAI,CAAC6B,4BAAL,CAAkCG,SAAlC,CAA4CC,MAA5C,CAAmD,2CAAnD;;AAEA,kBAAI,CAACjB,yBAAL,CAA+BkB,aAA/B,CAA6ClC,MAAM,CAACU,WAApD;AACA,WAPF;;AASA,eAAKd,OAAL,CAAaS,MAAb,CAAoB,8GAApB,EACEJ,IADF,CAEE,iEAAU,KAAKJ,gBAAf,CAFF,EAGGK,SAHH,CAGa,UAACiC,4BAAD,EAA6C;AACxD,gBAAIhE,OAAO,CAACgE,4BAAD,CAAX,EAA2C;AAC1C,oBAAI,CAACjB,6BAAL,GAAqCiB,4BAArC;AACA;AACD,WAPF;;AAQA,cAAMC,kBAAkB,GAAW,IAAnC;;AACA,eAAKxC,OAAL,CAAaS,MAAb,CAAoB,qGAApB,EACEJ,IADF,CAEE,iEAAU,KAAKJ,gBAAf,CAFF,EAGE,6DAAMuC,kBAAN,CAHF,EAIGlC,SAJH,CAIa,UAACO,OAAD,EAAsB;AACjC,gBAAItC,OAAO,CAACsC,OAAD,CAAX,EAAsB;AACrB,oBAAI,CAACA,OAAL,GAAeA,OAAf;;AACA,oBAAI,CAACO,yBAAL,CAA+BqB,aAA/B,CAA6C5B,OAA7C;;AACA,oBAAI,CAACQ,kBAAL,GAA0B,MAAI,CAACqB,gBAAL,CAAsB,MAAI,CAAC7B,OAAL,CAAavC,IAAnC,CAA1B;;AACA,oBAAI,CAAC8C,yBAAL,CAA+BuB,oBAA/B;AACA;AACD,WAXF;;AAYA,eAAK3C,OAAL,CAAaS,MAAb,CAAoB,6GAApB,EACEJ,IADF,CAEE,iEAAU,KAAKJ,gBAAf,CAFF,EAGGK,SAHH,CAGa,UAACsC,eAAD,EAA8B;AACzC,gBAAIrE,OAAO,CAACqE,eAAD,CAAX,EAA8B;AAC7B,oBAAI,CAACA,eAAL,GAAuBA,eAAvB;AACA,oBAAI,CAACC,iBAAL,GAAyB,IAAzB;AACA,aAHD,MAGO;AACN,oBAAI,CAACA,iBAAL,GAAyB,KAAzB;AACA;AACD,WAVF;;AAWA,eAAK7C,OAAL,CAAaS,MAAb,CAAoB,yGAApB,EACEJ,IADF,CAEE,iEAAU,KAAKJ,gBAAf,CAFF,EAGGK,SAHH,CAGa,UAACwC,WAAD,EAA0B;AACrC,gBAAIvE,OAAO,CAACuE,WAAD,CAAX,EAA0B;AACzB,oBAAI,CAACA,WAAL,GAAmBA,WAAnB;AACA,oBAAI,CAACC,aAAL,GAAqB,IAArB;AACA,aAHD,MAGO;AACN,oBAAI,CAACA,aAAL,GAAqB,KAArB;AACA;AACD,WAVF;;AAWA,eAAK/C,OAAL,CAAaS,MAAb,CAAoB,8GAApB,EACEJ,IADF,CAEE,iEAAU,KAAKJ,gBAAf,CAFF,EAGGK,SAHH,CAGa,UAACJ,eAAD,EAA8B;AACzC,kBAAI,CAACA,eAAL,GAAuBA,eAAvB;AACA,WALF;AAOA;;;sCAEiB;AACjB,eAAKD,gBAAL,CAAsBS,IAAtB,CAA2B,IAA3B;;AACA,eAAKT,gBAAL,CAAsBU,QAAtB;;AACA,eAAKsB,4BAAL,CAAkCG,SAAlC,CAA4CC,MAA5C,CAAmD,2CAAnD;;AACA,eAAKjB,yBAAL,CAA+B4B,oBAA/B;AACA;;;iCAEY;AACZ,eAAKf,4BAAL,CAAkCG,SAAlC,CAA4Ca,GAA5C,CAAgD,2CAAhD;;AAEA,eAAK5B,kBAAL,GAA0B,KAA1B;;AACA,eAAKF,0BAAL,CAAgC+B,yBAAhC,CAA0D,KAAKrC,OAA/D;AACA;;;mCAEc;AACd,eAAKQ,kBAAL,GAA0B,IAA1B;;AACA,eAAKF,0BAAL,CAAgCgC,2BAAhC,CAA4D,KAAKtC,OAAjE;AACA;;;kDAE6B;AAC7B,cAAMuC,mBAAmB,GAAW,KAAKR,eAAL,CAAqBtE,IAAzD;AACA,eAAK+E,yBAAL,CAA+BD,mBAA/B;AACA;;;8CAEyB;AACzB,cAAME,eAAe,GAAW,KAAKR,WAAL,CAAiBxE,IAAjD;AACA,eAAK+E,yBAAL,CAA+BC,eAA/B;AACA;;;;;;;uBAzJWpC,gB,EAAgB,kH,EAAA,+H,EAAA,uH,EAAA,2K,EAAA,wK;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,c;AAAA,a;AAAA,u4C;AAAA;AAAA;ACrB7B;;AA0GA;;;;AAzGI;;AA0GA;;AAAA;;;;;;;;;;sEDtFSA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACV3B,kBAAQ,EAAE,aADA;AAEVC,qBAAW,EAAE,0BAFH;AAGVC,mBAAS,EAAE,CAAC,0BAAD,EAA6B,gCAA7B;AAHD,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AErB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACQQ;;AAGI;AAAA;;AAAA;;AAAA;AAAA;;AAEJ;;;;;;;;AAHI,wFAAmB,mBAAnB,EAAmB,oCAAnB;;;;QDKC8D,e;AAmBZ,+BACSvD,OADT,EAEStC,OAFT,EAGSqC,eAHT,EAISqB,yBAJT,EAI4D;AAAA;;AAHnD,aAAApB,OAAA,GAAAA,OAAA;AACA,aAAAtC,OAAA,GAAAA,OAAA;AACA,aAAAqC,eAAA,GAAAA,eAAA;AACA,aAAAqB,yBAAA,GAAAA,yBAAA;AAjBD,aAAAnB,gBAAA,GAAqC,IAAI,4CAAJ,EAArC;AAkBH;;;;0DAUkC;AACtC,cAAMuD,yBAAyB,GAAW,KAAKC,mBAAL,CAAyB,CAAzB,EAA4BnF,IAAtE;AACA,cAAMoF,+BAA+B,GAAWF,yBAAyB,CAACzC,OAA1B,CAAkC,KAAlC,EAAyC,EAAzC,EAC9CA,OAD8C,CACtC,QADsC,EAC5B,EAD4B,EAE9CvC,WAF8C,GAG9CJ,KAH8C,CAGxC,GAHwC,EAI9C4C,IAJ8C,CAIzC,GAJyC,CAAhD;;AAKA,eAAKtD,OAAL,CAAaoB,QAAb,CAAsB,CAAC,YAAD,EAAe,QAAf,EAAyB,KAAKH,UAA9B,EAA0C,KAAKE,aAA/C,EAA8D,SAA9D,EAAyE6E,+BAAzE,CAAtB;AACA;;;mCAEc;AAAA;;AACdH,yBAAe,CAACI,WAAhB,GAA8BzB,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAA9B;AAEAoB,yBAAe,CAACK,cAAhB,GAAiC1B,QAAQ,CAACC,aAAT,CAAuB,4CAAvB,CAAjC;AAEAoB,yBAAe,CAACI,WAAhB,CAA4BE,gBAA5B,CAA6C,QAA7C,EAAuDN,eAAe,CAACO,WAAvE;;AAEA,eAAK/D,eAAL,CAAqBK,MAArB,CACEC,IADF,CAEE,iEAAU,KAAKJ,gBAAf,CAFF,EAGGK,SAHH,CAGa,UAACF,MAAD,EAAoB;AAC/B,kBAAI,CAACzB,UAAL,GAAkByB,MAAM,CAACzB,UAAzB;AACA,kBAAI,CAACE,aAAL,GAAqBuB,MAAM,CAACvB,aAA5B;;AAEA,kBAAI,CAACuC,yBAAL,CAA+B2C,wBAA/B,CAAwD,MAAI,CAACpF,UAA7D,EAAyE,MAAI,CAACE,aAA9E;AACA,WARF;;AAUA,eAAKmB,OAAL,CAAaS,MAAb,CAAoB,qGAApB,EACEJ,IADF,CAEE,iEAAU,KAAKJ,gBAAf,CAFF,EAGGK,SAHH,CAGa,UAACgC,aAAD,EAA4B;AACvC,gBAAI/D,OAAO,CAAC+D,aAAD,CAAX,EAA4B;AAC3B,oBAAI,CAAC0B,gBAAL,GAAwB,IAAxB;AACA;AACD,WAPF;;AASA,eAAKhE,OAAL,CAAaS,MAAb,CAAoB,8GAApB,EACEJ,IADF,CAEE,iEAAU,KAAKJ,gBAAf,CAFF,EAGGK,SAHH,CAGa,UAAC2D,oBAAD,EAAqC;AAChD,gBAAI1F,OAAO,CAAC0F,oBAAD,CAAX,EAAmC;AAClC,oBAAI,CAACC,qBAAL,GAA6BD,oBAA7B;AACA;AACD,WAPF;;AASA,eAAKjE,OAAL,CAAaS,MAAb,CAAoB,2GAApB,EACEJ,IADF,CAEE,6DAAM,CAAN,CAFF,EAGE,iEAAU,KAAKJ,gBAAf,CAHF,EAIGK,SAJH,CAIa,UAACmD,mBAAD,EAAoC;AAC/C,gBAAIlF,OAAO,CAACkF,mBAAD,CAAX,EAAkC;AACjC,oBAAI,CAACA,mBAAL,GAA2BA,mBAA3B;;AACA,kBAAI,CAAC,MAAI,CAACO,gBAAV,EAA4B;AAC3B,sBAAI,CAACG,+BAAL;AACA;AACD;AACD,WAXF;;AAaA,eAAKnE,OAAL,CAAaS,MAAb,CAAoB,uGAApB,EACEJ,IADF,CAEE,iEAAU,KAAKJ,gBAAf,CAFF,EAGGK,SAHH,CAGa,UAAC8D,eAAD,EAA8B;AACzC,gBAAI7F,OAAO,CAAC6F,eAAD,CAAX,EAA8B;AAC7B,oBAAI,CAACC,gBAAL,GAAwBD,eAAxB;AACA;AACD,WAPF;AAQA;;;sCAEiB;AACjB,eAAKnE,gBAAL,CAAsBS,IAAtB,CAA2B,IAA3B;;AACA,eAAKT,gBAAL,CAAsBU,QAAtB;;AACA4C,yBAAe,CAACI,WAAhB,CAA4BW,mBAA5B,CAAgD,QAAhD,EAA0Df,eAAe,CAACO,WAA1E;AACA;;;oCAEe;AACfP,yBAAe,CAACI,WAAhB,CAA4BY,QAA5B,CAAqC;AACpCC,eAAG,EAAE,CAD+B;AAEpCC,oBAAQ,EAAE;AAF0B,WAArC;AAIA;;;wCAEmB;AACnB,cAAMC,kBAAkB,GAAW,yHAAnC;AACA,iBAAQ,CAACnG,OAAO,CAAC,KAAK2F,qBAAN,CAAT,GACJS,OAAO,CAACD,kBAAD,CADH,GAEJ,IAFH;AAGA;;;sCAEoB7D,O,EAAgB;AACpC,eAAKO,yBAAL,CAA+BqB,aAA/B,CAA6C5B,OAA7C;AACA;;;0CAEwBA,O,EAAgB;AACxC,iBAAOtC,OAAO,CAAC,KAAK8F,gBAAN,CAAP,IACH,KAAKA,gBAAL,CAAsBO,MAAtB,CAA6B/D,OAA7B,CADJ;AAEA;;;sCAvGwB;AACxB,cAAI0C,eAAe,CAACI,WAAhB,CAA4BkB,SAA5B,GAAwCtB,eAAe,CAACuB,kBAA5D,EAAgF;AAC/EvB,2BAAe,CAACK,cAAhB,CAA+BxB,SAA/B,CAAyCa,GAAzC,CAA6C,6CAA7C;AACA,WAFD,MAEO;AACNM,2BAAe,CAACK,cAAhB,CAA+BxB,SAA/B,CAAyCC,MAAzC,CAAgD,6CAAhD;AACA;AACD;;;;;;AA9Ba,oBAAAyC,kBAAA,GAA6B,CAA7B;;;uBAFFvB,e,EAAe,kH,EAAA,uH,EAAA,+H,EAAA,wK;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,uX;AAAA;AAAA;ACf5B;;AACI;;AACI;;;;AACJ;;AACA;;AACI;;;;AACJ;;AACA;;AACI;;AAMJ;;AACA;;AAEI;AAAA,mBAAS,IAAAsB,SAAA,EAAT;AAAoB,WAApB;;AACJ;;AACJ;;AACA;;AACI;;AACJ;;;;AApBQ;;AAAA;;AAGA;;AAAA;;AAII;;AAAA;;;;;;;;;;sEDMCtB,e,EAAe;cAL3B,uDAK2B;eALjB;AACVhE,kBAAQ,EAAE,YADA;AAEVC,qBAAW,EAAE,yBAFH;AAGVC,mBAAS,EAAE,CAAC,yBAAD,EAA4B,+BAA5B;AAHD,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEf5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKasF,mB;;;;;;;sCACS9H,S,EAAiC;AACrD,iBAAOA,SAAS,CAACE,aAAV,GAA0BF,SAAS,CAACE,aAAV,EAA1B,GAAsD,IAA7D;AACA;;;;;;;uBAHW4H,mB;AAAmB,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB;;;;;sEAAnBA,mB,EAAmB;cAD/B;AAC+B,Q;;;;;;;;;;;;;;;;;;ACLhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,wB;AAMZ,wCACShF,OADT,EACuB;AAAA;;AAAd,aAAAA,OAAA,GAAAA,OAAA;AACJ;;;;oDAE+B1B,I,EAAY;AAC/C,iBAAOA,IAAI,CAACE,WAAL,GAAmBJ,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAAP;AACA;;;0DAEyCE,I,EAAY;AACrD,cAAM2G,wCAAwC,GAAW,KAAKC,2BAAL,CAAiC5G,IAAjC,CAAzD;;AACA,cAAI,KAAK6G,WAAL,CAAiBC,QAAjB,CAA0BH,wCAA1B,CAAJ,EAAyE;AACxE,mBAAO,IAAP;AACA,WAFD,MAEO;AACN,mBAAO,KAAP;AACA;AACD;;;qCAEoBxD,iB,EAAyB;AAC7C,cAAI4D,wBAAJ;;AACA,cAAM/C,aAAa,GAAY,KAAKgD,YAAL,CAAkB9D,IAAlB,CAAuB,UAACX,OAAD,EAAsB;AAC3E,gBAAItC,OAAO,CAACsC,OAAD,CAAX,EAAsB;AACrB,kBAAM0E,wBAAwB,GAAW1E,OAAO,CAACvC,IAAR,CAAayC,OAAb,CAAqB,KAArB,EAA4B,EAA5B,EACvCA,OADuC,CAC/B,QAD+B,EACrB,EADqB,EAEvCvC,WAFuC,GAGvCJ,KAHuC,CAGjC,GAHiC,EAIvC4C,IAJuC,CAIlC,GAJkC,CAAzC;;AAKA,kBAAIuE,wBAAwB,KAAK9D,iBAAjC,EAAoD;AACnD,uBAAOZ,OAAP;AACA;AACD;AACD,WAX8B,CAA/B;;AAYA,cAAItC,OAAO,CAAC+D,aAAD,CAAX,EAA4B;AAC3B+C,oCAAwB,GAAG,KAAKG,iCAAL,CAAuClD,aAAa,CAACX,MAArD,CAA3B;AACA0D,oCAAwB,GAAG,KAAKG,iCAAL,CAAuClD,aAAa,CAACT,SAArD,CAA3B;AACA;;AACD,cAAI,CAACwD,wBAAL,EAA+B;AAC9B,gBAAMI,YAAY,iDAAkDhE,iBAAlD,oCAAlB;AACA,kBAAM,IAAIiE,KAAJ,CAAUD,YAAV,CAAN;AACA;AACD;;;oCAEkB/E,I,EAA8BiF,K,EAA0B;AAAA;;AAC1E,eAAKR,WAAL,GAAmBQ,KAAK,CAACC,GAAzB;AACA,cAAMC,kBAAkB,GAAWnF,IAAI,CAACN,MAAL,CAAYU,WAA/C;;AACA,eAAKd,OAAL,CAAaS,MAAb,CAAoB,4FAApB,EACEH,SADF,CACY,UAACwF,WAAD,EAA4B;AACtC,kBAAI,CAACR,YAAL,GAAoBQ,WAApB;;AACA,kBAAI,CAACC,YAAL,CAAkBF,kBAAlB;AACA,WAJF,EAIIG,WAJJ;;AAMA,iBAAO,IAAP;AACA;;;;;;;uBAzDWhB,wB,EAAwB,yG;AAAA,K;;;aAAxBA,wB;AAAwB,eAAxBA,wBAAwB;;;;;sEAAxBA,wB,EAAwB;cADpC;AACoC,Q;;;;;;;;;;;;;;;;;;;;;;ACPrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaiB,uB;AAIZ,uCACSjG,OADT,EACuB;AAAA;;AAAd,aAAAA,OAAA,GAAAA,OAAA;AACJ;;;;0CAEqBrB,U,EAAoBE,a,EAAqB;AAClE,cAAMqH,6BAA6B,GAAY,KAAKZ,YAAL,CAAkB9D,IAAlB,CAAuB,UAACX,OAAD,EAAsB;AAC3F,gBAAItC,OAAO,CAACsC,OAAD,CAAX,EAAsB;AACrB,kBAAMsF,wBAAwB,GAAWtF,OAAO,CAACc,MAAR,CAAevD,KAAf,CAAqB,GAArB,EAA0B,CAA1B,EAA6BI,WAA7B,EAAzC;AACA,kBAAM4H,2BAA2B,GAAWvF,OAAO,CAACgB,SAAR,CAAkBzD,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,EAAgCI,WAAhC,EAA5C;;AACA,kBAAI2H,wBAAwB,KAAKxH,UAA7B,IAA2CyH,2BAA2B,KAAKvH,aAA/E,EAA8F;AAC7F,uBAAOgC,OAAP;AACA;AACD;AACD,WAR8C,CAA/C;;AASA,cAAI,CAACtC,OAAO,CAAC2H,6BAAD,CAAZ,EAA6C;AAC5C,gBAAMT,YAAY,oDAAqD9G,UAArD,+BAAoFE,aAApF,MAAlB;AACA,kBAAM,IAAI6G,KAAJ,CAAUD,YAAV,CAAN;AACA;AACD;;;oCAEkB/E,I,EAA4B;AAAA;;AAC9C,cAAM2F,aAAa,GAAW3F,IAAI,CAACN,MAAL,CAAYzB,UAA1C;AACA,cAAM2H,gBAAgB,GAAW5F,IAAI,CAACN,MAAL,CAAYvB,aAA7C;;AAEA,eAAKmB,OAAL,CAAaS,MAAb,CAAoB,4FAApB,EACEH,SADF,CACY,UAACwF,WAAD,EAA4B;AACtC,kBAAI,CAACR,YAAL,GAAoBQ,WAApB;AACA,WAHF,EAGIE,WAHJ;;AAKA,eAAKO,iBAAL,CAAuBF,aAAvB,EAAsCC,gBAAtC;AACA,iBAAO,IAAP;AACA;;;;;;;uBAnCWL,uB,EAAuB,yG;AAAA,K;;;aAAvBA,uB;AAAuB,eAAvBA,uBAAuB;;;;;sEAAvBA,uB,EAAuB;cADnC;AACmC,Q;;;;;;;;;;;;;;;;;;;;;;ACPpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaO,c;;;;;;;kCAEKC,K,EAAa;AAC7B,cAAIlI,OAAO,CAACkI,KAAD,CAAX,EAAoB;AACnB,gBAAMC,kBAAkB,GAAWD,KAAK,CAACE,QAAN,EAAnC;AACA,gBAAMC,wDAAwD,GAAWF,kBAAkB,CACzF3F,OADuE,CAC/D,iCAD+D,EAC5B,OAAO,GADqB,CAAzE;AAEA,gBAAM8F,eAAe,GAAWD,wDAAwD,GAAG,QAA3F;AACA,mBAAOC,eAAP;AACA,WAND,MAMO;AACN,mBAAO,SAAP;AACA;AACD;;;;;;;uBAZWL,c;AAAc,K;;;;YAAdA,c;AAAc;;;;;sEAAdA,c,EAAc;cAH1B,kDAG0B;eAHrB;AACLlI,cAAI,EAAE;AADD,S;AAGqB,Q;;;;;;;;;;;;;;;;;;ACL3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKawI,oB;;;;;;;kCAEKL,K,EAAa;AAC7B,cAAMM,wBAAwB,GAAWN,KAAzC;AACA,cAAMO,4BAA4B,aAAcD,wBAAd,MAAlC;AACA,iBAAOC,4BAAP;AACA;;;;;;;uBANWF,oB;AAAoB,K;;;;YAApBA,oB;AAAoB;;;;;sEAApBA,oB,EAAoB;cAHhC,kDAGgC;eAH3B;AACLxI,cAAI,EAAE;AADD,S;AAG2B,Q;;;;;;;;;;;;;;;;;;ACLjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKa2I,qB;;;;;;;kCAEKR,K,EAAa;AAC7B,iBAAOA,KAAK,CAACrI,KAAN,CAAY,GAAZ,EAAiB8I,GAAjB,CAAqB,UAACC,WAAD,EAAyB;AACpD,mBAAOA,WAAW,CAAC,CAAD,CAAX,CAAeC,WAAf,KAA+BD,WAAW,CAACE,KAAZ,CAAkB,CAAlB,CAAtC;AACA,WAFM,EAEJrG,IAFI,CAEC,GAFD,CAAP;AAGA;;;;;;;uBANWiG,qB;AAAqB,K;;;;YAArBA,qB;AAAqB;;;;;sEAArBA,qB,EAAqB;cAHjC,kDAGiC;eAH5B;AACL3I,cAAI,EAAE;AADD,S;AAG4B,Q","file":"components-country-list-country-list-country-list-module-es5.js","sourcesContent":["import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CountryListComponent } from './country-list.component';\r\nimport { RegionComponent } from '../region/region.component';\r\nimport { CountryComponent } from '../country/country.component';\r\nimport { CanProceedToRegionGuard } from 'src/app/guards/country-list/can-proceed-to-region.guard';\r\nimport { CanProceedToCountryGuard } from 'src/app/guards/country-list/can-proceed-to-country.guard';\r\nimport { CanLeaveRegionGuard } from 'src/app/guards/country-list/can-leave-region.guard';\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: '',\r\n\t\tcomponent: CountryListComponent\r\n\t},\r\n\t{\r\n\t\tpath: 'region/:regionName/:subRegionName',\r\n\t\tcomponent: RegionComponent,\r\n\t\tcanActivate: [CanProceedToRegionGuard],\r\n\t\tcanDeactivate: [CanLeaveRegionGuard],\r\n\t\tchildren: [{\r\n\t\t\tpath: 'country/:countryName',\r\n\t\t\tcomponent: CountryComponent,\r\n\t\t\tcanActivate: [CanProceedToCountryGuard]\r\n\t\t}]\r\n\t},\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forChild(routes)],\r\n\texports: [RouterModule]\r\n})\r\nexport class CountryListRoutingModule {\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n\tselector: 'app-country-list',\r\n\ttemplateUrl: './country-list.component.html',\r\n\tstyleUrls: ['./country-list.component.scss', './country-list-media.component.scss']\r\n})\r\nexport class CountryListComponent {\r\n\r\n\tpublic menuMode: boolean = false;\r\n\r\n\tpublic asiaMenuMode: boolean = false;\r\n\tpublic europeMenuMode: boolean = false;\r\n\tpublic africaMenuMode: boolean = false;\r\n\tpublic oceaniaMenuMode: boolean = false;\r\n\tpublic americaMenuMode: boolean = false;\r\n\r\n\tconstructor(\r\n\t\tprivate _router: Router\r\n\t) {\r\n\r\n\t}\r\n\r\n\tprivate takeNameOfContent(htmlElement: HTMLElement): string {\r\n\t\tconst currentSubRegionContent: string[] = htmlElement.innerHTML.split(' ').filter((name: string) => Boolean(name));\r\n\t\treturn currentSubRegionContent[0].toLowerCase();\r\n\t}\r\n\r\n\tpublic toggleMenuMode(): void {\r\n\t\tthis.menuMode = !this.menuMode;\r\n\t}\r\n\r\n\tpublic returnMenuMode(): void {\r\n\t\tthis.menuMode = !this.menuMode;\r\n\t\tthis.asiaMenuMode = false;\r\n\t\tthis.europeMenuMode = false;\r\n\t\tthis.africaMenuMode = false;\r\n\t\tthis.oceaniaMenuMode = false;\r\n\t\tthis.americaMenuMode = false;\r\n\t}\r\n\r\n\tpublic toggleAsiaMenuMode(): void {\r\n\t\tthis.asiaMenuMode = !this.asiaMenuMode;\r\n\t}\r\n\r\n\tpublic toggleEuropeMenuMode(): void {\r\n\t\tthis.europeMenuMode = !this.europeMenuMode;\r\n\t}\r\n\r\n\tpublic toggleOceaniaMenuMode(): void {\r\n\t\tthis.oceaniaMenuMode = !this.oceaniaMenuMode;\r\n\t}\r\n\r\n\tpublic toggleAfricaMenuMode(): void {\r\n\t\tthis.africaMenuMode = !this.africaMenuMode;\r\n\t}\r\n\r\n\tpublic toggleAmericaMenuMode(): void {\r\n\t\tthis.americaMenuMode = !this.americaMenuMode;\r\n\t}\r\n\r\n\tpublic switchRouter(regionHtmlElement: HTMLElement, subRegionHtmlElement: HTMLElement): void {\r\n\t\tconst regionName: string = this.takeNameOfContent(regionHtmlElement);\r\n\t\tconst subRegionName: string = this.takeNameOfContent(subRegionHtmlElement);\r\n\t\tthis._router.navigate(['/countries', 'region', regionName, subRegionName]);\r\n\t}\r\n\r\n}\r\n","<div class=\"-app-countries\">\r\n    <div \r\n        class=\"-app-countries__start-menu\"\r\n        [class.-app-countries__start-menu_menu-mode]=\"menuMode\"\r\n        (click)=\"toggleMenuMode()\">\r\n        <div\r\n            class=\"-app-countries__start-menu-title\">\r\n            Menu\r\n        </div>\r\n        <span \r\n            class=\"-app-countries__start-menu-search\">\r\n        </span>  \r\n    </div>\r\n    <div class=\"-app-countries__menu -app-countries__menu_bg\"\r\n        [class.-app-countries__menu_bg-menu-mode]=\"menuMode\">\r\n        <span \r\n            class=\"-app-countries__menu-return\"\r\n            [class.-app-countries__menu-return_visible]=\"menuMode\"\r\n            (click)=\"returnMenuMode()\"></span> \r\n        <div \r\n            class=\"-app-countries__menu-list\"\r\n            [class.-app-countries__menu-list_invisible]=\"oceaniaMenuMode || europeMenuMode || americaMenuMode || africaMenuMode\"\r\n            [class.-app-countries__menu-list_asia]=\"menuMode\"\r\n            [class.-app-countries__menu-list_asia-menu-mode]=\"asiaMenuMode\"\r\n            (click)=\"toggleAsiaMenuMode()\"\r\n            #asia>\r\n            Asia\r\n            <div \r\n                class=\"-app-countries__menu-item\"\r\n                [class.-app-countries__menu-item_visible]=\"asiaMenuMode\"\r\n                [class.-app-countries__menu-item_visible-southern-asia]=\"asiaMenuMode\"\r\n                (click)=\"switchRouter(asia, southernAsia)\"\r\n                #southernAsia>\r\n                Southern Asia\r\n            </div>\r\n            <div \r\n                class=\"-app-countries__menu-item\"\r\n                [class.-app-countries__menu-item_visible]=\"asiaMenuMode\"\r\n                [class.-app-countries__menu-item_visible-western-asia]=\"asiaMenuMode\"\r\n                (click)=\"switchRouter(asia, westernAsia)\"\r\n                #westernAsia>\r\n                Western Asia\r\n            </div>\r\n            <div \r\n                class=\"-app-countries__menu-item\"\r\n                [class.-app-countries__menu-item_visible]=\"asiaMenuMode\"\r\n                [class.-app-countries__menu-item_visible-central-asia]=\"asiaMenuMode\"\r\n                (click)=\"switchRouter(asia, centralAsia)\"\r\n                #centralAsia>\r\n                Central Asia\r\n            </div>\r\n            <div \r\n                class=\"-app-countries__menu-item\"\r\n                [class.-app-countries__menu-item_visible]=\"asiaMenuMode\"\r\n                [class.-app-countries__menu-item_visible-eastern-asia]=\"asiaMenuMode\"\r\n                (click)=\"switchRouter(asia, easternAsia)\"\r\n                #easternAsia>\r\n                Eastern Asia\r\n            </div>\r\n            <div \r\n                class=\"-app-countries__menu-item -app-countries__menu-item_south-eastern-asia\"\r\n                [class.-app-countries__menu-item_visible]=\"asiaMenuMode\"\r\n                [class.-app-countries__menu-item_visible-south-eastern-asia]=\"asiaMenuMode\"\r\n                (click)=\"switchRouter(asia, southEasternAsia)\"\r\n                #southEasternAsia>\r\n                South-Eastern Asia\r\n            </div>\r\n        </div>\r\n        <div \r\n            class=\"-app-countries__menu-list\"\r\n            [class.-app-countries__menu-list_invisible]=\"oceaniaMenuMode || americaMenuMode || asiaMenuMode || africaMenuMode\"\r\n            [class.-app-countries__menu-list_europe]=\"menuMode\"\r\n            [class.-app-countries__menu-list_europe-menu-mode]=\"europeMenuMode\"\r\n            (click)=\"toggleEuropeMenuMode()\"\r\n            #europe>\r\n            Europe\r\n            <div \r\n                class=\"-app-countries__menu-item\"\r\n                [class.-app-countries__menu-item_visible]=\"europeMenuMode\"\r\n                [class.-app-countries__menu-item_visible-northern-europe]=\"europeMenuMode\"\r\n                (click)=\"switchRouter(europe, northernEurope)\"\r\n                #northernEurope>\r\n                Northern Europe\r\n            </div>\r\n            <div \r\n                class=\"-app-countries__menu-item\"\r\n                [class.-app-countries__menu-item_visible]=\"europeMenuMode\"\r\n                [class.-app-countries__menu-item_visible-southern-europe]=\"europeMenuMode\"\r\n                (click)=\"switchRouter(europe, southernEurope)\"\r\n                #southernEurope>\r\n                Southern Europe\r\n            </div>\r\n            <div \r\n                class=\"-app-countries__menu-item\"\r\n                [class.-app-countries__menu-item_visible]=\"europeMenuMode\"\r\n                [class.-app-countries__menu-item_visible-western-europe]=\"europeMenuMode\"\r\n                (click)=\"switchRouter(europe, westernEurope)\"\r\n                #westernEurope>\r\n                Western Europe\r\n            </div>\r\n            <div \r\n                class=\"-app-countries__menu-item\"\r\n                [class.-app-countries__menu-item_visible]=\"europeMenuMode\"\r\n                [class.-app-countries__menu-item_visible-eastern-europe]=\"europeMenuMode\"\r\n                (click)=\"switchRouter(europe, easternEurope)\"\r\n                #easternEurope>\r\n                Eastern Europe\r\n            </div>\r\n        </div>\r\n        <div \r\n            class=\"-app-countries__menu-list\"\r\n            [class.-app-countries__menu-list_invisible]=\"oceaniaMenuMode || europeMenuMode || asiaMenuMode || americaMenuMode\"\r\n            [class.-app-countries__menu-list_africa]=\"menuMode\"\r\n            [class.-app-countries__menu-list_africa-menu-mode]=\"africaMenuMode\"\r\n            (click)=\"toggleAfricaMenuMode()\"\r\n            #africa>\r\n            Africa\r\n            <div \r\n                class=\"-app-countries__menu-item\"\r\n                [class.-app-countries__menu-item_visible]=\"africaMenuMode\"\r\n                [class.-app-countries__menu-item_visible-northern-africa]=\"africaMenuMode\"\r\n                (click)=\"switchRouter(africa, northernAfrica)\"\r\n                #northernAfrica>\r\n                Northern Africa\r\n            </div>\r\n            <div \r\n                class=\"-app-countries__menu-item\"\r\n                [class.-app-countries__menu-item_visible]=\"africaMenuMode\"\r\n                [class.-app-countries__menu-item_visible-middle-africa]=\"africaMenuMode\"\r\n                (click)=\"switchRouter(africa, middleAfrica)\"\r\n                #middleAfrica>\r\n                Middle Africa\r\n            </div>\r\n            <div \r\n                class=\"-app-countries__menu-item\"\r\n                [class.-app-countries__menu-item_visible]=\"africaMenuMode\"\r\n                [class.-app-countries__menu-item_visible-southern-africa]=\"africaMenuMode\"\r\n                (click)=\"switchRouter(africa, southernAfrica)\"\r\n                #southernAfrica>\r\n                Southern Africa\r\n            </div>\r\n            <div \r\n                class=\"-app-countries__menu-item\"\r\n                [class.-app-countries__menu-item_visible]=\"africaMenuMode\"\r\n                [class.-app-countries__menu-item_visible-eastern-africa]=\"africaMenuMode\"\r\n                (click)=\"switchRouter(africa, easternAfrica)\"\r\n                #easternAfrica>\r\n                Eastern Africa\r\n            </div>\r\n            <div \r\n                class=\"-app-countries__menu-item\"\r\n                [class.-app-countries__menu-item_visible]=\"africaMenuMode\"\r\n                [class.-app-countries__menu-item_visible-western-africa]=\"africaMenuMode\"\r\n                (click)=\"switchRouter(africa, westernAfrica)\"\r\n                #westernAfrica>\r\n                Western Africa\r\n            </div>\r\n        </div>\r\n        <div \r\n            class=\"-app-countries__menu-list\"\r\n            [class.-app-countries__menu-list_invisible]=\"americaMenuMode || europeMenuMode || asiaMenuMode || africaMenuMode\"\r\n            [class.-app-countries__menu-list_oceania]=\"menuMode\"\r\n            [class.-app-countries__menu-list_oceania-menu-mode]=\"oceaniaMenuMode\"\r\n            (click)=\"toggleOceaniaMenuMode()\"\r\n            #oceania>\r\n            Oceania\r\n            <div \r\n                class=\"-app-countries__menu-item\"\r\n                [class.-app-countries__menu-item_visible]=\"oceaniaMenuMode\"\r\n                [class.-app-countries__menu-item_visible-polynesia-oceania]=\"oceaniaMenuMode\"\r\n                (click)=\"switchRouter(oceania, polynesia)\"\r\n                #polynesia>\r\n                Polynesia\r\n            </div>\r\n            <div \r\n                class=\"-app-countries__menu-item -app-countries__menu-item_australia-oceania\"\r\n                [class.-app-countries__menu-item_visible]=\"oceaniaMenuMode\"\r\n                [class.-app-countries__menu-item_visible-australia-oceania]=\"oceaniaMenuMode\"\r\n                (click)=\"switchRouter(oceania, australia)\"\r\n                #australia>\r\n                Australia And New Zealand\r\n            </div>\r\n            <div \r\n                class=\"-app-countries__menu-item\"\r\n                [class.-app-countries__menu-item_visible]=\"oceaniaMenuMode\"\r\n                [class.-app-countries__menu-item_visible-melanesia-oceania]=\"oceaniaMenuMode\"\r\n                (click)=\"switchRouter(oceania, melanesia)\"\r\n                #melanesia>\r\n                Melanesia\r\n            </div>\r\n            <div \r\n                class=\"-app-countries__menu-item\"\r\n                [class.-app-countries__menu-item_visible]=\"oceaniaMenuMode\"\r\n                [class.-app-countries__menu-item_visible-micronesia-oceania]=\"oceaniaMenuMode\"\r\n                (click)=\"switchRouter(oceania, micronesia)\"\r\n                #micronesia>\r\n                Micronesia\r\n            </div>\r\n        </div>\r\n        <div \r\n            class=\"-app-countries__menu-list\"\r\n            [class.-app-countries__menu-list_invisible]=\"oceaniaMenuMode || europeMenuMode || asiaMenuMode || africaMenuMode\"\r\n            [class.-app-countries__menu-list_america]=\"menuMode\"\r\n            [class.-app-countries__menu-list_america-menu-mode]=\"americaMenuMode\"\r\n            (click)=\"toggleAmericaMenuMode()\"\r\n            #america>\r\n            Americas\r\n            <div \r\n                class=\"-app-countries__menu-item\"\r\n                [class.-app-countries__menu-item_visible]=\"americaMenuMode\"\r\n                [class.-app-countries__menu-item_visible-central-america]=\"americaMenuMode\"\r\n                (click)=\"switchRouter(america, centralAmerica)\"\r\n                #centralAmerica>\r\n                Central America\r\n            </div>\r\n            <div \r\n                class=\"-app-countries__menu-item -app-countries__menu-item_australia-oceania\"\r\n                [class.-app-countries__menu-item_visible]=\"americaMenuMode\"\r\n                [class.-app-countries__menu-item_visible-northern-america]=\"americaMenuMode\"\r\n                (click)=\"switchRouter(america, northernAmerica)\"\r\n                #northernAmerica>\r\n                Northern America\r\n            </div>\r\n            <div \r\n                class=\"-app-countries__menu-item\"\r\n                [class.-app-countries__menu-item_visible]=\"americaMenuMode\"\r\n                [class.-app-countries__menu-item_visible-south-america]=\"americaMenuMode\"\r\n                (click)=\"switchRouter(america, southAmerica)\"\r\n                #southAmerica>\r\n                South America\r\n            </div>\r\n            <div \r\n                class=\"-app-countries__menu-item\"\r\n                [class.-app-countries__menu-item_visible]=\"americaMenuMode\"\r\n                [class.-app-countries__menu-item_visible-caribbean-america]=\"americaMenuMode\"\r\n                (click)=\"switchRouter(america, caribbean)\"\r\n                #caribbean>\r\n                Caribbean\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CountryListComponent } from './country-list.component';\r\nimport { CountryListRoutingModule } from './country-list-routing.module';\r\nimport { CountryComponent } from '../country/country.component';\r\nimport { RegionComponent } from '../region/region.component';\r\nimport { CountryNameComponent } from '../country-name/country-name.component';\r\nimport { CanProceedToRegionGuard } from 'src/app/guards/country-list/can-proceed-to-region.guard';\r\nimport { CanProceedToCountryGuard } from 'src/app/guards/country-list/can-proceed-to-country.guard';\r\nimport { FormatForestAreaPipe } from 'src/app/pipes/country-list/format-forest-area.pipe';\r\nimport { FormatAreaPipe } from 'src/app/pipes/country-list/format-area.pipe';\r\nimport { FormatRegionTitlePipe } from 'src/app/pipes/country-list/format-region-title.pipe';\r\nimport { CanLeaveRegionGuard } from 'src/app/guards/country-list/can-leave-region.guard';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tCountryListComponent,\r\n\t\tCountryComponent,\r\n\t\tRegionComponent,\r\n\t\tCountryNameComponent,\r\n\t\tFormatForestAreaPipe,\r\n\t\tFormatAreaPipe,\r\n\t\tFormatRegionTitlePipe\r\n\t],\r\n\timports: [\r\n\t\tCountryListRoutingModule,\r\n\t\tCommonModule\r\n\t],\r\n\tproviders: [\r\n\t\tCanProceedToRegionGuard,\r\n\t\tCanProceedToCountryGuard,\r\n\t\tCanLeaveRegionGuard\r\n\t],\r\n\tbootstrap: [CountryListComponent]\r\n})\r\nexport class CountryListModule {\r\n\r\n}\r\n","import { Component, OnInit, Input, OnDestroy, Output, EventEmitter } from '@angular/core';\r\nimport { Country } from 'src/app/models/country-list/country';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil, delay } from 'rxjs/operators';\r\nimport { selectIsCountrySearchLoading } from 'src/app/store/country-list/country-list.selectors';\r\nimport { Store } from '@ngrx/store';\r\n\r\n@Component({\r\n\tselector: 'app-country-name',\r\n\ttemplateUrl: './country-name.component.html',\r\n\tstyleUrls: ['./country-name.component.scss', './country-name-media.component.scss']\r\n})\r\nexport class CountryNameComponent implements OnInit, OnDestroy {\r\n\r\n\tprivate _destroySubject$: Subject<boolean> = new Subject();\r\n\r\n\tprivate _regionName: string;\r\n\tprivate _subRegionName: string;\r\n\r\n\tpublic isSearchLoading: boolean = true;\r\n\r\n\t@Input()\r\n\tpublic country: Country;\r\n\r\n\t@Input()\r\n\tpublic isCountrySelected: boolean;\r\n\r\n\t@Output()\r\n\tpublic onSelected: EventEmitter<Country> = new EventEmitter<Country>();\r\n\r\n\tconstructor(\r\n\t\tprivate _router: Router,\r\n\t\tprivate _activatedRoute: ActivatedRoute,\r\n\t\tprivate _store$: Store\r\n\t) { }\r\n\r\n\tpublic ngOnInit(): void {\r\n\t\tthis._activatedRoute.params\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$),\r\n\t\t\t).subscribe((params: Params) => {\r\n\t\t\t\tthis._regionName = params.regionName;\r\n\t\t\t\tthis._subRegionName = params.subRegionName;\r\n\t\t\t});\r\n\r\n\t\tthis._store$.select(selectIsCountrySearchLoading)\r\n\t\t\t.pipe(\r\n\t\t\t\tdelay(0),\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((isSearchLoading: boolean) => {\r\n\t\t\t\tthis.isSearchLoading = isSearchLoading;\r\n\t\t\t});\r\n\t}\r\n\r\n\tpublic ngOnDestroy(): void {\r\n\t\tthis._destroySubject$.next(true);\r\n\t\tthis._destroySubject$.complete();\r\n\t}\r\n\r\n\tpublic goToCurrentCountryRouter(): void {\r\n\t\tthis.onSelected.emit(this.country);\r\n\t\tconst countryName: string = this.country.name.replace(/\\./g, '')\r\n\t\t\t.replace(/\\(|\\)/g, '')\r\n\t\t\t.toLowerCase()\r\n\t\t\t.split(' ')\r\n\t\t\t.join('-');\r\n\t\tthis._router.navigate([\r\n\t\t\t'/countries',\r\n\t\t\t'region',\r\n\t\t\tthis._regionName,\r\n\t\t\tthis._subRegionName,\r\n\t\t\t'country',\r\n\t\t\tcountryName\r\n\t\t]);\r\n\t}\r\n\r\n}\r\n","\r\n<div class=\"-app-country\">\r\n    <button \r\n        class=\"-app-country__name\"\r\n        [class.-app-country__name_selected]=\"isCountrySelected\"\r\n        [disabled]=\"isSearchLoading\"\r\n        (click)=\"goToCurrentCountryRouter()\">\r\n        {{ country.name }}\r\n    </button>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Country } from 'src/app/models/country-list/country';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { takeUntil, delay } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\nimport {\r\n\tselectSearchCountry,\r\n\tselectIsCountrySearchLoading,\r\n\tselectSearchNextCountry,\r\n\tselectSearchPreviousCountry\r\n} from 'src/app/store/country-list/country-list.selectors';\r\nimport { FacadeServiceDonationList } from 'src/app/store/donation-list/donation-list.facade';\r\nimport { FacadeServiceCountryList } from 'src/app/store/country-list/country-list.facade';\r\nimport { selectCountriesForDonation } from 'src/app/store/donation-list/donation-list.selectors';\r\n\r\n@Component({\r\n\tselector: 'app-country',\r\n\ttemplateUrl: './country.component.html',\r\n\tstyleUrls: ['./country.component.scss', './country-media.component.scss']\r\n})\r\nexport class CountryComponent implements OnInit, OnDestroy {\r\n\r\n\tprivate _destroySubject$: Subject<boolean> = new Subject();\r\n\r\n\tprivate _appNavigationDonationButton: HTMLElement;\r\n\r\n\tprivate _selectedCountriesForDonation: Country[];\r\n\r\n\tpublic isSearchLoading: boolean = true;\r\n\r\n\tpublic country: Country;\r\n\tpublic previousCountry: Country;\r\n\tpublic nextCountry: Country;\r\n\r\n\tpublic isPreviousCountry: boolean;\r\n\tpublic isNextCountry: boolean;\r\n\r\n\tpublic isCanChosenCountry: boolean = true;\r\n\r\n\tconstructor(\r\n\t\tprivate _store$: Store,\r\n\t\tprivate _activatedRoute: ActivatedRoute,\r\n\t\tprivate _router: Router,\r\n\t\tprivate _facadeDonationListService: FacadeServiceDonationList,\r\n\t\tprivate _facadeCountryListService: FacadeServiceCountryList\r\n\t) { }\r\n\r\n\tprivate canChosenCountry(countryName: string): boolean {\r\n\t\tif (Boolean(this._selectedCountriesForDonation)) {\r\n\t\t\tconst chosenCountry: Country = this._selectedCountriesForDonation.find((country: Country) => country.name === countryName);\r\n\t\t\treturn !Boolean(chosenCountry);\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate switchRouterToSomeCountry(countryName: string): void {\r\n\t\tconst countryRouterName: string = countryName.replace(/\\./g, '')\r\n\t\t\t.replace(/\\(|\\)/g, '')\r\n\t\t\t.toLowerCase()\r\n\t\t\t.split(' ')\r\n\t\t\t.join('-');\r\n\r\n\t\tconst countryRegionName: string = this.country.region;\r\n\t\tconst countrySubRegionName: string = this.country.subRegion;\r\n\t\tconst countryRegionRouterName: string = this.takeRouterNameOfRegionOrSubRegion(countryRegionName);\r\n\t\tconst countrySubRegionRouterName: string = this.takeRouterNameOfRegionOrSubRegion(countrySubRegionName);\r\n\r\n\t\tthis._router.navigate([\r\n\t\t\t'/countries',\r\n\t\t\t'region',\r\n\t\t\tcountryRegionRouterName,\r\n\t\t\tcountrySubRegionRouterName,\r\n\t\t\t'country',\r\n\t\t\tcountryRouterName\r\n\t\t]);\r\n\t}\r\n\r\n\tprivate takeRouterNameOfRegionOrSubRegion(name: string): string {\r\n\t\treturn name.toLowerCase().split(' ')[0];\r\n\t}\r\n\r\n\tpublic ngOnInit(): void {\r\n\t\tthis._appNavigationDonationButton = document.querySelector('.-app-navigation__donation-button');\r\n\r\n\t\tthis._activatedRoute.params\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((params: Params) => {\r\n\t\t\t\tthis._appNavigationDonationButton.classList.remove('-app-navigation__donation-button_blinking');\r\n\r\n\t\t\t\tthis._facadeCountryListService.searchCountry(params.countryName);\r\n\t\t\t});\r\n\r\n\t\tthis._store$.select(selectCountriesForDonation)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((selectedCountriesForDonation: Country[]) => {\r\n\t\t\t\tif (Boolean(selectedCountriesForDonation)) {\r\n\t\t\t\t\tthis._selectedCountriesForDonation = selectedCountriesForDonation;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tconst countrySearchDelay: number = 3000;\r\n\t\tthis._store$.select(selectSearchCountry)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$),\r\n\t\t\t\tdelay(countrySearchDelay)\r\n\t\t\t).subscribe((country: Country) => {\r\n\t\t\t\tif (Boolean(country)) {\r\n\t\t\t\t\tthis.country = country;\r\n\t\t\t\t\tthis._facadeCountryListService.selectCountry(country);\r\n\t\t\t\t\tthis.isCanChosenCountry = this.canChosenCountry(this.country.name);\r\n\t\t\t\t\tthis._facadeCountryListService.searchCountrySuccess();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tthis._store$.select(selectSearchPreviousCountry)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((previousCountry: Country) => {\r\n\t\t\t\tif (Boolean(previousCountry)) {\r\n\t\t\t\t\tthis.previousCountry = previousCountry;\r\n\t\t\t\t\tthis.isPreviousCountry = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.isPreviousCountry = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tthis._store$.select(selectSearchNextCountry)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((nextCountry: Country) => {\r\n\t\t\t\tif (Boolean(nextCountry)) {\r\n\t\t\t\t\tthis.nextCountry = nextCountry;\r\n\t\t\t\t\tthis.isNextCountry = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.isNextCountry = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tthis._store$.select(selectIsCountrySearchLoading)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((isSearchLoading: boolean) => {\r\n\t\t\t\tthis.isSearchLoading = isSearchLoading;\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\tpublic ngOnDestroy(): void {\r\n\t\tthis._destroySubject$.next(true);\r\n\t\tthis._destroySubject$.complete();\r\n\t\tthis._appNavigationDonationButton.classList.remove('-app-navigation__donation-button_blinking');\r\n\t\tthis._facadeCountryListService.resetSearchCounrties();\r\n\t}\r\n\r\n\tpublic choose(): void {\r\n\t\tthis._appNavigationDonationButton.classList.add('-app-navigation__donation-button_blinking');\r\n\r\n\t\tthis.isCanChosenCountry = false;\r\n\t\tthis._facadeDonationListService.initNewCountryForDonation(this.country);\r\n\t}\r\n\r\n\tpublic unchoose(): void {\r\n\t\tthis.isCanChosenCountry = true;\r\n\t\tthis._facadeDonationListService.deleteNewCountryForDonation(this.country);\r\n\t}\r\n\r\n\tpublic switchToPreviousCountry(): void {\r\n\t\tconst previousCountryName: string = this.previousCountry.name;\r\n\t\tthis.switchRouterToSomeCountry(previousCountryName);\r\n\t}\r\n\r\n\tpublic switchToNextCountry(): void {\r\n\t\tconst nextCountryName: string = this.nextCountry.name;\r\n\t\tthis.switchRouterToSomeCountry(nextCountryName);\r\n\t}\r\n\r\n}\r\n","<div \r\n    *ngIf=\"!isSearchLoading\"\r\n    class=\"-app-country\">\r\n    <div class=\"-app-country-wrapper\">\r\n        <div \r\n            class=\"-app-country__current-country\">\r\n            <div class=\"-app-country__header\">\r\n                <div class=\"-app-country__header-info\">\r\n                    <h2 class=\"-app-country__header-info-title\">\r\n                        {{ country.name }}\r\n                    </h2>\r\n                    <img \r\n                        class=\"-app-country__header-info-image\" \r\n                        src=\"{{country.flag}}\">\r\n                </div>\r\n                <div class=\"-app-country__header-info\">\r\n                    <h3 class=\"-app-country__header-info-capital-title\">\r\n                        Capital\r\n                    </h3>\r\n                    <h3 class=\"-app-country__header-info-capital-name\">\r\n                        Name: {{ country.capital.name }}\r\n                    </h3>\r\n                    <h3 class=\"-app-country__header-info-capital-latitude\">\r\n                        Latitude: {{ country.capital.latitude }}\r\n                    </h3>\r\n                    <h3 class=\"-app-country__header-info-capital-longitude\">\r\n                        Longitude: {{ country.capital.longitude }}\r\n                    </h3>\r\n                </div>\r\n            </div>\r\n            <div class=\"-app-country__item\">\r\n                <div class=\"-app-country__item-title\">\r\n                    Region:\r\n                </div>\r\n                <div class=\"-app-country__item-info\">\r\n                    {{ country.region }}\r\n                </div>\r\n            </div>\r\n            <div class=\"-app-country__item\">\r\n                <div class=\"-app-country__item-title\">\r\n                    Sub Region:\r\n                </div>\r\n                <div class=\"-app-country__item-info\">\r\n                    {{ country.subRegion }}\r\n                </div>\r\n            </div>\r\n            <div class=\"-app-country__item\">\r\n                <div class=\"-app-country__item-title\">\r\n                    Area:\r\n                </div>\r\n                <div class=\"-app-country__item-info\">\r\n                    {{ country.area | formatArea }}\r\n                </div>\r\n            </div>\r\n            <div class=\"-app-country__item\">\r\n                <div class=\"-app-country__item-title\">\r\n                    Forest Area:\r\n                </div>\r\n                <div class=\"-app-country__item-info\">\r\n                    {{ country.forestArea | formatForestArea }}\r\n                </div>\r\n            </div>\r\n            <div class=\"-app-country__item\">\r\n                <div class=\"-app-country__item-title\">\r\n                    Native Name:\r\n                </div>\r\n                <div class=\"-app-country__item-info\">\r\n                    {{ country.nativeName }}\r\n                </div>\r\n            </div>\r\n            <div class=\"-app-country__item\">\r\n                <div class=\"-app-country__item-title\">\r\n                    Time Zone:\r\n                </div>\r\n                <div class=\"-app-country__item-info\">\r\n                    {{ country.timeZone }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"-app-country__button-container\">\r\n        <button \r\n            class=\"-app-country__button-slide -app-country__button-slide_left\"\r\n            [disabled]=\"!isPreviousCountry\"\r\n            (click)=\"switchToPreviousCountry()\">\r\n        </button>\r\n        <button \r\n            class=\"-app-country__button -app-country__button_choose\"\r\n            [class.-app-country__button_choose-invisible]=\"!isCanChosenCountry\"\r\n            (click)=\"choose()\">\r\n            choose\r\n        </button>\r\n        <button \r\n            class=\"-app-country__button -app-country__button_unchoose\"\r\n            [class.-app-country__button_unchoose-visible]=\"!isCanChosenCountry\"\r\n            (click)=\"unchoose()\">\r\n            unchoose\r\n        </button>\r\n        <button \r\n            class=\"-app-country__button-slide -app-country__button-slide_right\"\r\n            [disabled]=\"!isNextCountry\"\r\n            (click)=\"switchToNextCountry()\">\r\n        </button>\r\n    </div>\r\n</div>\r\n\r\n<div \r\n    *ngIf=\"isSearchLoading\"\r\n    class=\"-app-loader\">\r\n    <div class=\"-app-loader__ball -app-loader__ball_first\">\r\n        <div class=\"-app-loader__inner\">\r\n        </div>\r\n    </div>\r\n    <div class=\"-app-loader__ball -app-loader__ball_second\">\r\n        <div class=\"-app-loader__inner\">\r\n        </div>\r\n    </div>\r\n    <div class=\"-app-loader__ball -app-loader__ball_third\">\r\n        <div class=\"-app-loader__inner\">\r\n        </div>\r\n    </div>\r\n    <div class=\"-app-loader__ball -app-loader__ball_fourth\">\r\n        <div class=\"-app-loader__inner\">\r\n        </div>\r\n    </div>\r\n    <div class=\"-app-loader__ball -app-loader__ball_fifth\">\r\n        <div class=\"-app-loader__inner\">\r\n        </div>\r\n    </div>\r\n    <div class=\"-app-loader__ball -app-loader__ball_sixth\">\r\n        <div class=\"-app-loader__inner\">\r\n        </div>\r\n    </div>\r\n    <div class=\"-app-loader__ball -app-loader__ball_center\">\r\n        <div class=\"-app-loader__inner\">\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { takeUntil, delay } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\nimport { Country } from 'src/app/models/country-list/country';\r\nimport { selectSubRegionsCountries, selectSearchCountry, selectSelectedCountry } from 'src/app/store/country-list/country-list.selectors';\r\nimport { FacadeServiceCountryList } from 'src/app/store/country-list/country-list.facade';\r\nimport { selectCountriesForDonation } from 'src/app/store/donation-list/donation-list.selectors';\r\n\r\n@Component({\r\n\tselector: 'app-region',\r\n\ttemplateUrl: './region.component.html',\r\n\tstyleUrls: ['./region.component.scss', './region-media.component.scss']\r\n})\r\nexport class RegionComponent implements OnInit, OnDestroy {\r\n\r\n\tpublic static windowScrollHeight: Number = 2;\r\n\tpublic static scrollBlock: HTMLElement;\r\n\tpublic static scrollUpButton: HTMLElement;\r\n\r\n\tprivate _destroySubject$: Subject<boolean> = new Subject();\r\n\r\n\tprivate _isSearchCountry: boolean;\r\n\r\n\tprivate _countriesForDonation: Country[];\r\n\r\n\tprivate _selectedCountry: Country;\r\n\r\n\tpublic regionName: string;\r\n\tpublic subRegionName: string;\r\n\r\n\tpublic subRegionsCountries: Country[];\r\n\r\n\tconstructor(\r\n\t\tprivate _store$: Store,\r\n\t\tprivate _router: Router,\r\n\t\tprivate _activatedRoute: ActivatedRoute,\r\n\t\tprivate _facadeCountryListService: FacadeServiceCountryList,\r\n\t) { }\r\n\r\n\tpublic static isScrolling(): void {\r\n\t\tif (RegionComponent.scrollBlock.scrollTop > RegionComponent.windowScrollHeight) {\r\n\t\t\tRegionComponent.scrollUpButton.classList.add('-app-scroll-up-button_tree-category-visible');\r\n\t\t} else {\r\n\t\t\tRegionComponent.scrollUpButton.classList.remove('-app-scroll-up-button_tree-category-visible');\r\n\t\t}\r\n\t}\r\n\r\n\tprivate navigateToCurrentSubRegionRoute(): void {\r\n\t\tconst firstSubRegionCountryName: string = this.subRegionsCountries[0].name;\r\n\t\tconst firstSubRegionCountryRouterName: string = firstSubRegionCountryName.replace(/\\./g, '')\r\n\t\t\t.replace(/\\(|\\)/g, '')\r\n\t\t\t.toLowerCase()\r\n\t\t\t.split(' ')\r\n\t\t\t.join('-');\r\n\t\tthis._router.navigate(['/countries', 'region', this.regionName, this.subRegionName, 'country', firstSubRegionCountryRouterName]);\r\n\t}\r\n\r\n\tpublic ngOnInit(): void {\r\n\t\tRegionComponent.scrollBlock = document.querySelector('.-app-region');\r\n\r\n\t\tRegionComponent.scrollUpButton = document.querySelector('.-app-scroll-up-button_sub-region-category');\r\n\r\n\t\tRegionComponent.scrollBlock.addEventListener('scroll', RegionComponent.isScrolling);\r\n\r\n\t\tthis._activatedRoute.params\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((params: Params) => {\r\n\t\t\t\tthis.regionName = params.regionName;\r\n\t\t\t\tthis.subRegionName = params.subRegionName;\r\n\r\n\t\t\t\tthis._facadeCountryListService.searchSubRegionCountries(this.regionName, this.subRegionName);\r\n\t\t\t});\r\n\r\n\t\tthis._store$.select(selectSearchCountry)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((searchCountry: Country) => {\r\n\t\t\t\tif (Boolean(searchCountry)) {\r\n\t\t\t\t\tthis._isSearchCountry = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\tthis._store$.select(selectCountriesForDonation)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((countriesForDonation: Country[]) => {\r\n\t\t\t\tif (Boolean(countriesForDonation)) {\r\n\t\t\t\t\tthis._countriesForDonation = countriesForDonation;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\tthis._store$.select(selectSubRegionsCountries)\r\n\t\t\t.pipe(\r\n\t\t\t\tdelay(0),\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((subRegionsCountries: Country[]) => {\r\n\t\t\t\tif (Boolean(subRegionsCountries)) {\r\n\t\t\t\t\tthis.subRegionsCountries = subRegionsCountries;\r\n\t\t\t\t\tif (!this._isSearchCountry) {\r\n\t\t\t\t\t\tthis.navigateToCurrentSubRegionRoute();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\tthis._store$.select(selectSelectedCountry)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((selectedCountry: Country) => {\r\n\t\t\t\tif (Boolean(selectedCountry)) {\r\n\t\t\t\t\tthis._selectedCountry = selectedCountry;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n\tpublic ngOnDestroy(): void {\r\n\t\tthis._destroySubject$.next(true);\r\n\t\tthis._destroySubject$.complete();\r\n\t\tRegionComponent.scrollBlock.removeEventListener('scroll', RegionComponent.isScrolling);\r\n\t}\r\n\r\n\tpublic scrollTop(): void {\r\n\t\tRegionComponent.scrollBlock.scrollTo({\r\n\t\t\ttop: 0,\r\n\t\t\tbehavior: 'smooth'\r\n\t\t});\r\n\t}\r\n\r\n\tpublic canDeactivate(): boolean {\r\n\t\tconst deactivateQuestion: string = 'You haven’t chosen country. Are you sure that you want to go from this page? For donation you need at least one country';\r\n\t\treturn (!Boolean(this._countriesForDonation))\r\n\t\t\t? confirm(deactivateQuestion)\r\n\t\t\t: true;\r\n\t}\r\n\r\n\tpublic selectCountry(country: Country): void {\r\n\t\tthis._facadeCountryListService.selectCountry(country);\r\n\t}\r\n\r\n\tpublic isCountrySelected(country: Country): boolean {\r\n\t\treturn Boolean(this._selectedCountry)\r\n\t\t\t&& this._selectedCountry.equals(country);\r\n\t}\r\n\r\n}\r\n","<div class=\"-app-region\">\r\n    <h2 class=\"-app-region__title\">\r\n        {{ regionName | formatRegionTitle }} Region\r\n    </h2>\r\n    <h3  class=\"-app-region__sub-title\">\r\n        {{ subRegionName | formatRegionTitle }} Subregion\r\n    </h3>\r\n    <div class=\"-app-region__country-list\">\r\n        <app-country-name \r\n            *ngFor=\"let country of subRegionsCountries\" \r\n            [country]=\"country\"\r\n            (onSelected)=\"selectCountry($event)\"\r\n            [isCountrySelected]=isCountrySelected(country)>\r\n        </app-country-name>\r\n    </div>\r\n    <a \r\n        class=\"-app-scroll-up-button -app-scroll-up-button_sub-region-category\"\r\n        (click)=\"scrollTop()\">\r\n    </a>\r\n</div>\r\n<div class=\"-app-region__current-country\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { CanComponentDeactivate } from '../../models/can-component-deactivate/can-component-deactivate-interface';\r\n\r\n@Injectable()\r\nexport class CanLeaveRegionGuard implements CanDeactivate<CanComponentDeactivate> {\r\n\tpublic canDeactivate(component: CanComponentDeactivate): boolean {\r\n\t\treturn component.canDeactivate ? component.canDeactivate() : true;\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { Country } from '../../models/country-list/country';\r\nimport { selectCountryList } from '../../store/country-list/country-list.selectors';\r\n\r\n@Injectable()\r\nexport class CanProceedToCountryGuard implements CanActivate {\r\n\r\n\tprivate _countryList: Country[];\r\n\r\n\tprivate _currentUrl: string;\r\n\r\n\tconstructor(\r\n\t\tprivate _store$: Store\r\n\t) { }\r\n\r\n\tprivate takeNameOfRegionOrSubRegion(name: string): string {\r\n\t\treturn name.toLowerCase().split(' ')[0];\r\n\t}\r\n\r\n\tprivate isExistRegionOrSubRegionRouteName(name: string): boolean {\r\n\t\tconst currentCountryRegionOrSubRegionRouteName: string = this.takeNameOfRegionOrSubRegion(name);\r\n\t\tif (this._currentUrl.includes(currentCountryRegionOrSubRegionRouteName)) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate checkCountry(countryRouterName: string): void {\r\n\t\tlet isExistCurrentUrlCountry: boolean;\r\n\t\tconst searchCountry: Country = this._countryList.find((country: Country) => {\r\n\t\t\tif (Boolean(country)) {\r\n\t\t\t\tconst currentCountryRouterName: string = country.name.replace(/\\./g, '')\r\n\t\t\t\t\t.replace(/\\(|\\)/g, '')\r\n\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t.split(' ')\r\n\t\t\t\t\t.join('-');\r\n\t\t\t\tif (currentCountryRouterName === countryRouterName) {\r\n\t\t\t\t\treturn country;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (Boolean(searchCountry)) {\r\n\t\t\tisExistCurrentUrlCountry = this.isExistRegionOrSubRegionRouteName(searchCountry.region);\r\n\t\t\tisExistCurrentUrlCountry = this.isExistRegionOrSubRegionRouteName(searchCountry.subRegion);\r\n\t\t}\r\n\t\tif (!isExistCurrentUrlCountry) {\r\n\t\t\tconst errorMessage: string = `There is no country with this name (${countryRouterName}) in this region and sub-region`;\r\n\t\t\tthrow new Error(errorMessage);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n\t\tthis._currentUrl = state.url;\r\n\t\tconst currentCountryName: string = next.params.countryName;\r\n\t\tthis._store$.select(selectCountryList)\r\n\t\t\t.subscribe((countryList: Country[]) => {\r\n\t\t\t\tthis._countryList = countryList;\r\n\t\t\t\tthis.checkCountry(currentCountryName);\r\n\t\t\t}).unsubscribe();\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { selectCountryList } from '../../store/country-list/country-list.selectors';\r\nimport { Country } from '../../models/country-list/country';\r\n\r\n@Injectable()\r\nexport class CanProceedToRegionGuard implements CanActivate {\r\n\r\n\tprivate _countryList: Country[];\r\n\r\n\tconstructor(\r\n\t\tprivate _store$: Store\r\n\t) { }\r\n\r\n\tprivate checkRouterParams(regionName: string, subRegionName: string): void {\r\n\t\tconst currentRegionSubRegionCountry: Country = this._countryList.find((country: Country) => {\r\n\t\t\tif (Boolean(country)) {\r\n\t\t\t\tconst currentCountryRegionName: string = country.region.split(' ')[0].toLowerCase();\r\n\t\t\t\tconst currentCountrySubRegionName: string = country.subRegion.split(' ')[0].toLowerCase();\r\n\t\t\t\tif (currentCountryRegionName === regionName && currentCountrySubRegionName === subRegionName) {\r\n\t\t\t\t\treturn country;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (!Boolean(currentRegionSubRegionCountry)) {\r\n\t\t\tconst errorMessage: string = `There are no countries in such region (${regionName}) and sub-region (${subRegionName})`;\r\n\t\t\tthrow new Error(errorMessage);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic canActivate(next: ActivatedRouteSnapshot): boolean {\r\n\t\tconst currentRegion: string = next.params.regionName;\r\n\t\tconst currentSubRegion: string = next.params.subRegionName;\r\n\r\n\t\tthis._store$.select(selectCountryList)\r\n\t\t\t.subscribe((countryList: Country[]) => {\r\n\t\t\t\tthis._countryList = countryList;\r\n\t\t\t}).unsubscribe();\r\n\r\n\t\tthis.checkRouterParams(currentRegion, currentSubRegion);\r\n\t\treturn true;\r\n\t}\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n\tname: 'formatArea'\r\n})\r\nexport class FormatAreaPipe implements PipeTransform {\r\n\r\n\tpublic transform(value: number): string {\r\n\t\tif (Boolean(value)) {\r\n\t\t\tconst currentCountryArea: string = value.toString();\r\n\t\t\tconst currentCountryAreaInfoWithSpacesAfterEachThirdCharacters: string = currentCountryArea\r\n\t\t\t\t.replace(/(\\d{1,3}(?=(?:\\d\\d\\d)+(?!\\d)))/g, '$1' + ' ');\r\n\t\t\tconst countryAreaInfo: string = currentCountryAreaInfoWithSpacesAfterEachThirdCharacters + ' sq/km';\r\n\t\t\treturn countryAreaInfo;\r\n\t\t} else {\r\n\t\t\treturn 'no-data';\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n\tname: 'formatForestArea'\r\n})\r\nexport class FormatForestAreaPipe implements PipeTransform {\r\n\r\n\tpublic transform(value: number): string {\r\n\t\tconst currentCountryForestArea: number = value;\r\n\t\tconst currentCountryForestAreaInfo: string = `${currentCountryForestArea}%`;\r\n\t\treturn currentCountryForestAreaInfo;\r\n\t}\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n\tname: 'formatRegionTitle'\r\n})\r\nexport class FormatRegionTitlePipe implements PipeTransform {\r\n\r\n\tpublic transform(value: string): string {\r\n\t\treturn value.split('-').map((currentWord: string) => {\r\n\t\t\treturn currentWord[0].toUpperCase() + currentWord.slice(1);\r\n\t\t}).join(' ');\r\n\t}\r\n\r\n}\r\n"]}