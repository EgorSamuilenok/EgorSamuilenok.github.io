{"version":3,"sources":["webpack:///src/app/components/user-list/user-profile-donation/user-profile-donation.component.ts","webpack:///src/app/components/user-list/user-profile-donation/user-profile-donation.component.html","webpack:///src/app/components/user-list/user-profile/user-profile-routing.module.ts","webpack:///src/app/components/user-list/user-profile/user-profile.component.ts","webpack:///src/app/components/user-list/user-profile/user-profile.component.html","webpack:///src/app/components/user-list/user-profile/user-profile.module.ts","webpack:///src/app/guards/user-list/can-leave-user-profile.guard.ts","webpack:///src/app/guards/user-list/can-proceed-to-user-profile.guard.ts","webpack:///src/app/pipes/user-list/format-user-age.pipe.ts","webpack:///src/app/pipes/user-list/format-user-medical-points.pipe.ts","webpack:///src/app/pipes/user-list/format-user-profile-tree-amount.pipe.ts"],"names":["UserProfileDonationComponent","selector","templateUrl","styleUrls","routes","path","component","canActivate","canDeactivate","UserProfileRoutingModule","forChild","imports","exports","UserProfileComponent","_store$","_router","_facadeUserListService","_facadeDonationListService","_destroySubject$","initImageForm","initApplyInsuranceForm","myFormNewImage","userNewImage","required","myFormApplyInsurance","userMedicalPoints","medicalPointsValidator","userMessage","control","medicalPointsInputControlName","isNaN","value","Number","currentUserMedicalPoints","Boolean","controls","select","pipe","subscribe","user","clone","medicalPoints","initUserDonationList","id","userDonationList","initUserDonationListSuccess","isInitedUserDonationList","next","complete","imageMode","newImage","changeCurrentUserImage","toggleImageMode","navigate","medicalFormMode","_isGettedMedicalInsurance","invalid","markAsTouched","numberOfGetMedicalPoints","pickUpPointsFromUser","toggleFillMedicalForm","deactivateQuestion","isAnyValuesEnteredInMedicalInsuranceForm","confirm","UserProfileModule","declarations","providers","bootstrap","CanLeaveUserProfileGuard","CanProceedToUserProfileGuard","currentUser","unsubscribe","FormatUserAgePipe","userAge","name","FormatUserMedicalPointsPipe","FormatUserProfileTreeAmountPipe","String"],"mappings":"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","file":"components-user-list-user-profile-user-profile-module-es5.js","sourcesContent":["import { Component, Input } from '@angular/core';\r\nimport { Donation } from 'src/app/models/donation-list/donation';\r\n\r\n@Component({\r\n\tselector: 'app-user-profile-donation',\r\n\ttemplateUrl: './user-profile-donation.component.html',\r\n\tstyleUrls: ['./user-profile-donation.component.scss']\r\n})\r\nexport class UserProfileDonationComponent {\r\n\r\n\t@Input()\r\n\tpublic donation: Donation;\r\n\r\n\t// tslint:disable-next-line: no-empty\r\n\tconstructor() { }\r\n\r\n}\r\n","<div class=\"-app-user-profile-donation\">\r\n    <div class=\"-app-user-profile-donation__item\">\r\n        <div class=\"-app-user-profile-donation__item-title\">\r\n            tree name:            \r\n        </div>\r\n        <div class=\"-app-user-profile-donation__item-info\">\r\n            {{ donation.treeDonation.tree.name }}\r\n        </div>\r\n    </div>\r\n    <div class=\"-app-user-profile-donation__item\">\r\n        <div class=\"-app-user-profile-donation__item-title\">\r\n            tree type:            \r\n        </div>\r\n        <div class=\"-app-user-profile-donation__item-info\">\r\n            {{ donation.treeDonation.tree.type }}\r\n        </div>\r\n    </div>\r\n    <div class=\"-app-user-profile-donation__item\">\r\n        <div class=\"-app-user-profile-donation__item-title\">\r\n            tree number:            \r\n        </div>\r\n        <div class=\"-app-user-profile-donation__item-info\">\r\n            {{ (donation.treeDonation.amount) | formatUserProfileTreeAmount }}\r\n        </div>\r\n    </div>\r\n    <div class=\"-app-user-profile-donation__item\">\r\n        <div class=\"-app-user-profile-donation__item-title\">\r\n            cost:            \r\n        </div>\r\n        <div class=\"-app-user-profile-donation__item-info\">\r\n            {{ (donation.treeDonation.cost) | currency }}\r\n        </div>\r\n    </div>\r\n    <div class=\"-app-user-profile-donation__item\">\r\n        <div class=\"-app-user-profile-donation__item-title\">\r\n            country:            \r\n        </div>\r\n        <div class=\"-app-user-profile-donation__item-info\">\r\n            {{ donation.country.name }}\r\n        </div>\r\n    </div>\r\n    <div class=\"-app-user-profile-donation__item\">\r\n        <div class=\"-app-user-profile-donation__item-title\">\r\n            date:            \r\n        </div>\r\n        <div class=\"-app-user-profile-donation__item-info\">\r\n            {{ donation.date | date }}\r\n        </div>\r\n    </div>\r\n</div>","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { UserProfileComponent } from './user-profile.component';\r\nimport { CanProceedToUserProfileGuard } from 'src/app/guards/user-list/can-proceed-to-user-profile.guard';\r\nimport { CanLeaveUserProfileGuard } from 'src/app/guards/user-list/can-leave-user-profile.guard';\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: '',\r\n\t\tcomponent: UserProfileComponent,\r\n\t\tcanActivate: [CanProceedToUserProfileGuard],\r\n\t\tcanDeactivate: [CanLeaveUserProfileGuard]\r\n\t}\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forChild(routes)],\r\n\texports: [RouterModule]\r\n})\r\nexport class UserProfileRoutingModule {\r\n\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { selectUser } from 'src/app/store/user-list/user-list.selectors';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { User } from 'src/app/models/user-list/user';\r\nimport { Router } from '@angular/router';\r\nimport { FacadeServiceUserList } from 'src/app/store/user-list/user-list.facade';\r\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Donation } from 'src/app/models/donation-list/donation';\r\nimport { selectUserDonationList, selectIsInitedUserDonationList } from 'src/app/store/donation-list/donation-list.selectors';\r\nimport { FacadeServiceDonationList } from 'src/app/store/donation-list/donation-list.facade';\r\n\r\n@Component({\r\n\tselector: 'app-user-profile',\r\n\ttemplateUrl: './user-profile.component.html',\r\n\tstyleUrls: ['./user-profile.component.scss']\r\n})\r\nexport class UserProfileComponent implements OnInit, OnDestroy {\r\n\r\n\tpublic static currentUserMedicalPoints: number;\r\n\r\n\tprivate _destroySubject$: Subject<boolean> = new Subject();\r\n\r\n\tprivate _isGettedMedicalInsurance: boolean;\r\n\r\n\tpublic user: User;\r\n\r\n\tpublic userDonationList: Donation[];\r\n\tpublic isInitedUserDonationList: boolean;\r\n\r\n\tpublic myFormNewImage: FormGroup;\r\n\tpublic imageMode: boolean;\r\n\r\n\tpublic myFormApplyInsurance: FormGroup;\r\n\tpublic medicalFormMode: boolean;\r\n\r\n\tconstructor(\r\n\t\tprivate _store$: Store,\r\n\t\tprivate _router: Router,\r\n\t\tprivate _facadeUserListService: FacadeServiceUserList,\r\n\t\tprivate _facadeDonationListService: FacadeServiceDonationList\r\n\t) {\r\n\t\tthis.initImageForm();\r\n\t\tthis.initApplyInsuranceForm();\r\n\t}\r\n\r\n\tprivate initImageForm(): void {\r\n\t\tthis.myFormNewImage = new FormGroup({\r\n\t\t\tuserNewImage: new FormControl('', Validators.required)\r\n\t\t});\r\n\t}\r\n\r\n\tprivate initApplyInsuranceForm(): void {\r\n\t\tthis.myFormApplyInsurance = new FormGroup({\r\n\t\t\tuserMedicalPoints: new FormControl('', [Validators.required, this.medicalPointsValidator]),\r\n\t\t\tuserMessage: new FormControl('', Validators.required)\r\n\t\t});\r\n\t}\r\n\r\n\tprivate medicalPointsValidator(control: FormControl): { [s: string]: boolean } {\r\n\t\tconst medicalPointsInputControlName: string = 'userMedicalPoints';\r\n\t\tif (!isNaN(control.value) && control.value > 0 && Number(control.value) <= UserProfileComponent.currentUserMedicalPoints) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn { medicalPointsInputControlName: true };\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate isAnyValuesEnteredInMedicalInsuranceForm(): boolean {\r\n\t\tif (\r\n\t\t\tBoolean(this.myFormApplyInsurance.controls.userMedicalPoints.value)\r\n\t\t\t|| Boolean(this.myFormApplyInsurance.controls.userMessage.value)\r\n\t\t) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic ngOnInit(): void {\r\n\t\tthis._store$.select(selectUser)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((user: User) => {\r\n\t\t\t\tif (Boolean(user)) {\r\n\t\t\t\t\tUserProfileComponent.currentUserMedicalPoints = user.clone().medicalPoints;\r\n\t\t\t\t\tthis.user = user;\r\n\t\t\t\t\tthis._facadeDonationListService.initUserDonationList(this.user.id);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tthis._store$.select(selectUserDonationList)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((userDonationList: Donation[]) => {\r\n\t\t\t\tthis.userDonationList = userDonationList;\r\n\t\t\t\tthis._facadeDonationListService.initUserDonationListSuccess();\r\n\t\t\t});\r\n\t\tthis._store$.select(selectIsInitedUserDonationList)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((isInitedUserDonationList: boolean) => {\r\n\t\t\t\tthis.isInitedUserDonationList = isInitedUserDonationList;\r\n\t\t\t});\r\n\t}\r\n\r\n\tpublic ngOnDestroy(): void {\r\n\t\tthis._destroySubject$.next(true);\r\n\t\tthis._destroySubject$.complete();\r\n\t}\r\n\r\n\tpublic toggleImageMode(): void {\r\n\t\tthis.imageMode = !this.imageMode;\r\n\t}\r\n\r\n\tpublic changeImage(): void {\r\n\t\tconst newImage: string = this.myFormNewImage.controls.userNewImage.value;\r\n\t\tthis._facadeUserListService.changeCurrentUserImage(newImage);\r\n\t\tthis.toggleImageMode();\r\n\t}\r\n\r\n\tpublic startDonation(): void {\r\n\t\tthis._router.navigate(['/donation']);\r\n\t}\r\n\r\n\tpublic toggleFillMedicalForm(): void {\r\n\t\tthis.medicalFormMode = !this.medicalFormMode;\r\n\t}\r\n\r\n\tpublic applyInsurance(): void {\r\n\t\tthis._isGettedMedicalInsurance = true;\r\n\r\n\t\tif (this.myFormApplyInsurance.invalid) {\r\n\t\t\tthis.myFormApplyInsurance.controls.userMedicalPoints.markAsTouched();\r\n\t\t\tthis.myFormApplyInsurance.controls.userMessage.markAsTouched();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst numberOfGetMedicalPoints: number = Number(this.myFormApplyInsurance.controls.userMedicalPoints.value);\r\n\t\tthis._facadeUserListService.pickUpPointsFromUser(this.user.id, numberOfGetMedicalPoints);\r\n\t\tif (this.medicalFormMode) {\r\n\t\t\tthis.toggleFillMedicalForm();\r\n\t\t}\r\n\t\tthis.initApplyInsuranceForm();\r\n\t}\r\n\r\n\tpublic canDeactivate(): boolean {\r\n\t\tconst deactivateQuestion: string = 'You filled in the form fields but did not get insurance. Are you sure that you want to go from this page?';\r\n\t\treturn (!this._isGettedMedicalInsurance && this.isAnyValuesEnteredInMedicalInsuranceForm())\r\n\t\t\t? confirm(deactivateQuestion)\r\n\t\t\t: true;\r\n\t}\r\n\r\n}\r\n","<div \r\n    *ngIf=\"!user\"\r\n    class=\"-app-user-profile\">\r\n</div>\r\n<div  *ngIf=\"user\"\r\n    class=\"-app-user-profile\">\r\n    <div \r\n        class=\"-app-user-profile__image-container\"\r\n        (click)=\"toggleImageMode()\">\r\n        <div *ngTemplateOutlet=\"user.profileImage ? profileImage : defaultProfileImage\"></div>\r\n        <ng-template #profileImage>\r\n            <img class=\"-app-user-profile__image\" src=\"{{ user.profileImage }}\">\r\n        </ng-template>\r\n        <ng-template #defaultProfileImage>\r\n            <div class=\"-app-user-profile__image -app-user-profile__image_default\">\r\n                no image\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n    <div \r\n        class=\"-app-user-profile__donation-list\"\r\n        [class.-app-user-profile__donation-list_image-mode]=\"imageMode\">\r\n        <h2 class=\"-app-user-profile__donation-list-title\">\r\n            donations\r\n        </h2>\r\n        <div\r\n            class=\"-app-user-profile__donation-list-wrapper\"\r\n            *ngIf=\"isInitedUserDonationList\">\r\n            <app-user-profile-donation\r\n            class=\"-app-user-profile__current-donation\"\r\n            *ngFor=\"let donation of userDonationList\"\r\n            [donation]=\"donation\">\r\n            </app-user-profile-donation>\r\n        </div>\r\n        <div \r\n            class=\"-app-user-profile__start-donation\"\r\n            *ngIf=\"!isInitedUserDonationList\"\r\n            [class.-app-user-profile__start-donation_image-mode]=\"imageMode\">\r\n            <h3 class=\"-app-user-profile__start-donation-title\">           \r\n                you have not donated ever\r\n            </h3>\r\n            <h3 class=\"-app-user-profile__start-donation-sub-title\">\r\n                start your donation history by clicking on the button below\r\n            </h3>\r\n            <button \r\n                class=\"-app-user-profile__start-donation-button\"\r\n                (click)=\"startDonation()\">\r\n                start\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"-app-user-profile__info-list-wrapper\">\r\n        <div \r\n            class=\"-app-user-profile__info-list\"\r\n            [class.-app-user-profile__info-list_medical-mode]=\"medicalFormMode\">\r\n            <div class=\"-app-user-profile__info-item\">\r\n                {{ user.name }}\r\n            </div>\r\n            <div class=\"-app-user-profile__info-item\">\r\n                {{ user.surName }}\r\n            </div>\r\n            <div class=\"-app-user-profile__info-item\">\r\n                {{ user.email }}\r\n            </div>\r\n            <div class=\"-app-user-profile__info-item\">\r\n                Age: {{ (user.age) | formatUserAge }}\r\n            </div>\r\n            <div class=\"-app-user-profile__info-item\">\r\n                Join our project: {{ user.date | date }}\r\n            </div>\r\n            <div \r\n                class=\"-app-user-profile__info-item\"\r\n                *ngIf=\"user.country\">\r\n                Country: {{ user.country.name }}\r\n            </div>\r\n            <div \r\n                class=\"-app-user-profile__info-item\"\r\n                title=\"1 medical point = 1 donation $\">\r\n                Medical Points: {{ (user.medicalPoints) | formatUserMedicalPoints }}\r\n            </div>\r\n            <button\r\n                class=\"-app-user-profile__info-list-button\"\r\n                title=\"get medical insurance\"\r\n                [disabled]=\"!user.medicalPoints\"\r\n                (click)=\"toggleFillMedicalForm()\">\r\n            </button>\r\n        </div>\r\n        <form \r\n            class=\"-app-user-profile__info-list-form -app-user-profile__info-list-form_medical\"\r\n            [class.-app-user-profile__info-list-form_medical-mode]=\"medicalFormMode\"\r\n            [formGroup]=\"myFormApplyInsurance\"\r\n            (ngSubmit)=\"applyInsurance()\">\r\n            <button \r\n                class=\"-app-user-profile__info-list-form-back\"\r\n                (click)=\"toggleFillMedicalForm()\">\r\n            </button>\r\n            <h2 class=\"-app-user-profile__info-list-form-title\">medical insurance</h2>\r\n            <div class=\"-app-user-profile__info-list-form-item\">\r\n                <input \r\n                    class=\"-app-user-profile__info-list-form-item-input -app-user-profile__info-list-form-item-input_name\"\r\n                    name=\"medicalPoints\"\r\n                    type=\"text\"\r\n                    formControlName=\"userMedicalPoints\"\r\n                    autocomplete=\"off\">\r\n                <span class=\"-app-user-profile__info-list-form-item-line\"></span>\r\n                <label \r\n                    class=\"-app-user-profile__info-list-form-item-label\"\r\n                    [class.-app-user-profile__info-list-form-item-label_invisible]=\"myFormApplyInsurance.controls['userMedicalPoints'].dirty\">\r\n                    points number\r\n                </label>\r\n                <span \r\n                    class=\"-app-user-profile__info-list-form-warning -app-user-profile__info-list-form-warning_item\" \r\n                    [class.-app-user-profile__info-list-form-warning_item-invalid]=\"myFormApplyInsurance.controls['userMedicalPoints'].touched\r\n                        && myFormApplyInsurance.controls['userMedicalPoints'].invalid\"\r\n                    title=\"Enter only values ​​within your medical points\">\r\n                </span>\r\n            </div>\r\n            <div class=\"-app-user-profile__info-list-form-message\">\r\n                <textarea class=\"-app-user-profile__info-list-form-message-textarea\"\r\n                    placeholder=\"Write your message\"\r\n                    formControlName=\"userMessage\"\r\n                    title=\"Enter only values ​​within your medical points\"></textarea>\r\n                    <span \r\n                    class=\"-app-user-profile__info-list-form-warning -app-user-profile__info-list-form-warning_message\"\r\n                    [class.-app-user-profile__info-list-form-warning_message-invalid]=\"myFormApplyInsurance.controls['userMessage'].touched\r\n                        && myFormApplyInsurance.controls['userMessage'].invalid\"\r\n                    title=\"Enter some message to us\">\r\n                    </span>\r\n            </div>\r\n            <button \r\n                class=\"-app-user-profile__info-list-form-button\"\r\n                type=\"submit\"\r\n                [disabled]=\"myFormApplyInsurance.controls['userMedicalPoints'].invalid \r\n                    || myFormApplyInsurance.controls['userMessage'].invalid\">get</button>\r\n        </form>\r\n    </div>\r\n    <div \r\n        class=\"-app-user-profile__change\"\r\n        [class.-app-user-profile__change_image-mode]=\"imageMode\">\r\n        <div \r\n            class=\"-app-user-profile__change-title\"\r\n            [class.-app-user-profile__change-title_image-mode]=\"imageMode\">\r\n            Enter the url of any picture, which you want to see in your profile\r\n        </div>\r\n        <img \r\n            class=\"-app-user-profile__change-image\"\r\n            [class.-app-user-profile__change-image_image-mode]=\"imageMode\"\r\n            src=\"{{myFormNewImage.controls['userNewImage'].value}}\">\r\n        <form \r\n            class=\"-app-user-profile__change-form\"\r\n            [class.-app-user-profile__change-form_image-mode]=\"imageMode\"\r\n            [formGroup]=\"myFormNewImage\"\r\n            (ngSubmit)=\"changeImage()\">\r\n            <input \r\n                class=\"-app-user-profile__change-input\" \r\n                [class.-app-user-profile__change-input_image-mode]=\"imageMode\"\r\n                type=\"text\"\r\n                name=\"imageUrl\"\r\n                placeholder=\"Enter url of the picture\"\r\n                formControlName=\"userNewImage\"\r\n                autocomplete=\"off\">\r\n            <span \r\n                class=\"-app-user-profile__change-input-line\" \r\n                [class.-app-user-profile__change-input-line_image-mode]=\"imageMode\">\r\n            </span>\r\n            <button\r\n                class=\"-app-user-profile__change-switch-button\" \r\n                [class.-app-user-profile__change-switch-button_image-mode]=\"imageMode\"\r\n                type=\"submit\">\r\n                Change\r\n            </button>\r\n        </form>\r\n        <button \r\n            class=\"-app-user-profile__change-return-button\"\r\n            [class.-app-user-profile__change-return-button_image-mode]=\"imageMode\"\r\n            (click)=\"toggleImageMode()\">\r\n        </button>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserProfileComponent } from './user-profile.component';\r\nimport { UserProfileDonationComponent } from '../user-profile-donation/user-profile-donation.component';\r\nimport { UserProfileRoutingModule } from './user-profile-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CanProceedToUserProfileGuard } from 'src/app/guards/user-list/can-proceed-to-user-profile.guard';\r\nimport { CanLeaveUserProfileGuard } from 'src/app/guards/user-list/can-leave-user-profile.guard';\r\nimport { FormatUserProfileTreeAmountPipe } from 'src/app/pipes/user-list/format-user-profile-tree-amount.pipe';\r\nimport { FormatUserMedicalPointsPipe } from 'src/app/pipes/user-list/format-user-medical-points.pipe';\r\nimport { FormatUserAgePipe } from 'src/app/pipes/user-list/format-user-age.pipe';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tUserProfileComponent,\r\n\t\tUserProfileDonationComponent,\r\n\t\tFormatUserProfileTreeAmountPipe,\r\n\t\tFormatUserMedicalPointsPipe,\r\n\t\tFormatUserAgePipe\r\n\t],\r\n\timports: [\r\n\t\tUserProfileRoutingModule,\r\n\t\tCommonModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t],\r\n\tproviders: [\r\n\t\tCanProceedToUserProfileGuard,\r\n\t\tCanLeaveUserProfileGuard\r\n\t],\r\n\tbootstrap: [UserProfileComponent]\r\n})\r\nexport class UserProfileModule {\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { CanComponentDeactivate } from '../../models/can-component-deactivate/can-component-deactivate-interface';\r\n\r\n@Injectable()\r\nexport class CanLeaveUserProfileGuard implements CanDeactivate<CanComponentDeactivate> {\r\n\tpublic canDeactivate(component: CanComponentDeactivate): boolean {\r\n\t\treturn component.canDeactivate ? component.canDeactivate() : true;\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { selectUser } from '../../store/user-list/user-list.selectors';\r\nimport { Store } from '@ngrx/store';\r\nimport { User } from '../../models/user-list/user';\r\n\r\n@Injectable()\r\nexport class CanProceedToUserProfileGuard implements CanActivate {\r\n\r\n\tconstructor(\r\n\t\tprivate _store$: Store,\r\n\t\tprivate _router: Router\r\n\t) {\r\n\r\n\t}\r\n\r\n\tpublic canActivate(): boolean {\r\n\t\tlet currentUser: User;\r\n\t\tthis._store$.select(selectUser)\r\n\t\t\t.subscribe((user: User) => {\r\n\t\t\t\tcurrentUser = user;\r\n\t\t\t}).unsubscribe();\r\n\t\tif (currentUser) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\tthis._router.navigate(['/registration', 'mode', 'login-mode']);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'formatUserAge'\n})\nexport class FormatUserAgePipe implements PipeTransform {\n\n\tpublic transform(userAge: number): string {\n\t\treturn `${userAge} y.o.`;\n\t}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'formatUserMedicalPoints'\n})\nexport class FormatUserMedicalPointsPipe implements PipeTransform {\n\n\tpublic transform(userMedicalPoints: number): string {\n\t\treturn `${userMedicalPoints}p`;\n\t}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'formatUserProfileTreeAmount'\n})\nexport class FormatUserProfileTreeAmountPipe implements PipeTransform {\n\n\tpublic transform(value: number): string {\n\t\treturn (String(value) + 'th');\n\t}\n}\n"]}